
/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by openapi-typescript

request
export interface paths {
    "/whManager/bs/tbEnterprise/deleteById/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 根据ID删除企业 */
        post: operations["deleteByIdUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEnterprise/getById/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 根据ID查询企业详情 */
        post: operations["getByIdUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEnterprise/getPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 分页查询 */
        post: operations["getPageUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEnterprise/saveOrUpdate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 保存或更新 */
        post: operations["saveOrUpdateUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEqp/deleteById/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 根据ID删除 */
        post: operations["deleteByIdUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEqp/getPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 分页查询 */
        post: operations["getPageUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEqp/saveOrUpdate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 保存或更新 */
        post: operations["saveOrUpdateUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/dangerStatistic/{year}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据年度、危险等级统计 */
        get: operations["dangerStatisticUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/deleteById/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 根据ID删除 */
        post: operations["deleteByIdUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/getById/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 根据ID查询明细 */
        post: operations["getByIdUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/getPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 分页查询 */
        post: operations["getPageUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/projectStatistic/{year}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据年度项目、企业统计 */
        get: operations["projectStatisticUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/reportTypeStatistic/{year}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据年度、报告类型统计 */
        get: operations["reportTypeStatisticUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/reviewComments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增或修改评审意见 */
        post: operations["reviewCommentsUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbEvaluateReport/saveOrUpdate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 保存或更新 */
        post: operations["saveOrUpdateUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbSafeEnviroManager/deleteById/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 根据ID删除 */
        post: operations["deleteByIdUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbSafeEnviroManager/getPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 分页查询 */
        post: operations["getPageUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbSafeEnviroManager/saveOrUpdate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 保存或更新 */
        post: operations["saveOrUpdateUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/audit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 园区端-审核 */
        post: operations["auditUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/emailRemind": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 园区端-邮件提醒 */
        post: operations["emailRemindUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/getAppPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 移动端-分页查询(档案库) */
        post: operations["getAppPageUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/getArchiveCount": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 园区端-档案库数量 */
        get: operations["getArchiveCountUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/getEnterprisePage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 企业端-分页查询 */
        post: operations["getEnterprisePageUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/getParkPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 园区端-分页查询 */
        post: operations["getParkPageUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/getSafeEduRecord": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 企业端-安全教育记录查询 */
        post: operations["getSafeEduRecordUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/levelStatistic": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 园区端-单位等级统计 */
        get: operations["levelStatisticUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 移动端-单位注册 */
        post: operations["registerUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/typeStatistic": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 园区端-单位类别统计 */
        get: operations["typeStatisticUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/bs/tbThirdUnit/uploadSafeEduRecord": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 企业端-上传安全教育记录 */
        post: operations["uploadSafeEduRecordUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDept/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询所有机构数据
         * @description 查询所有机构数据
         */
        post: operations["listUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDept/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除机构数据
         * @description 批量删除机构数据
         */
        post: operations["removeByIdListUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDept/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存机构信息
         * @description 保存机构信息
         */
        post: operations["saveUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDept/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改机构信息
         * @description 修改资源信息
         */
        post: operations["updateUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDict/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询所有字典数据
         * @description 查询所有字典数据
         */
        post: operations["listUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDict/listPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询字典分页数据
         * @description 查询字典分页数据
         */
        post: operations["listPageUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDict/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除字典数据
         * @description 批量删除字典数据
         */
        post: operations["removeByIdListUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDict/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存字典信息
         * @description 保存字典信息
         */
        post: operations["saveUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDict/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改字典信息
         * @description 修改字典信息
         */
        post: operations["updateUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDictData/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询所有字典数据
         * @description 查询所有字典数据
         */
        post: operations["listUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDictData/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除字典数据
         * @description 批量删除字典数据
         */
        post: operations["removeByIdListUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDictData/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存字典数据信息
         * @description 保存字典数据信息
         */
        post: operations["saveUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemDictData/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改字典数据信息
         * @description 修改字典数据信息
         */
        post: operations["updateUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/download/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 查询附件下载
         * @description 查询附件下载
         */
        get: operations["downloadUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/downloadLocalFile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 下载项目本地模板附件
         * @description 通过文件名称下载项目本地模板附件
         */
        get: operations["downloadLocalFileUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/getList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询所有附件数据
         * @description 查询所有附件数据
         */
        post: operations["getListUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询附件列表
         * @description 查询附件列表
         */
        post: operations["listUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/listPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询附件分页数据
         * @description 查询附件分页数据
         */
        post: operations["listPageUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除附件数据
         * @description 批量删除附件数据
         */
        post: operations["removeByIdListUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemFile/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 附件上传
         * @description 附件上传
         */
        post: operations["uploadUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemLog/getByThreadId/{threadId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 通过线程ID查询
         * @description 通过线程ID查询
         */
        get: operations["getByThreadIdUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemLog/listPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 分页查询信息
         * @description 分页查询信息
         */
        post: operations["listPageUsingPOST_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemLog/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存日志信息
         * @description 保存日志信息
         */
        post: operations["saveUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemLogExtend/getByLogId/{logId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 根据日志ID查询信息
         * @description 根据日志ID查询信息
         */
        get: operations["getByLogIdUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/getAll": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 获取全部模块
         * @description 获取全部模块
         */
        get: operations["getAllUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/getResources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 根据模块id获取资源
         * @description 根据模块id获取资源
         */
        get: operations["getResourcesUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/listPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 分页查询
         * @description 分页查询
         */
        post: operations["listPageUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/listResourcesByModuleId/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 设置目录
         * @description 设置目录
         */
        get: operations["listResourcesByModuleIdUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 删除
         * @description 删除
         */
        post: operations["removeByIdListUsingPOST_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存资源信息
         * @description 保存资源信息
         */
        post: operations["saveUsingPOST_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/settingResources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 设置目录
         * @description 设置目录
         */
        post: operations["settingResourcesUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemModule/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改资源信息
         * @description 修改资源信息
         */
        post: operations["updateUsingPOST_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemResources/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询所有资源数据
         * @description 查询所有资源数据
         */
        post: operations["listUsingPOST_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemResources/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除资源数据
         * @description 批量删除资源数据
         */
        post: operations["removeByIdListUsingPOST_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemResources/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存资源信息
         * @description 保存资源信息
         */
        post: operations["saveUsingPOST_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemResources/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改资源信息
         * @description 修改资源信息
         */
        post: operations["updateUsingPOST_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemRole/assignResource": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 设置资源
         * @description 设置资源
         */
        post: operations["assignResourceUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemRole/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 查询所有角色数据
         * @description 查询所有角色数据
         */
        post: operations["listUsingPOST_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemRole/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除数据
         * @description 批量删除数据
         */
        post: operations["removeByIdListUsingPOST_6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemRole/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存角色信息
         * @description 保存角色信息
         */
        post: operations["saveUsingPOST_6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemRole/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改角色信息
         * @description 修改角色信息
         */
        post: operations["updateUsingPOST_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/assignRole": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 分配角色
         * @description 分配角色
         */
        post: operations["assignRoleUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/changePassword": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改当前用户密码
         * @description 修改当亲用户密码
         */
        post: operations["changePasswordUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/getCurrUserInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 获取当前登录用户信息
         * @description 获取当前登录用户信息
         */
        get: operations["getCurrUserInfoUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/listPage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 分页查询用户信息
         * @description 分页查询用户信息
         */
        post: operations["listPageUsingPOST_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/removeByIdList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 批量删除数据
         * @description 批量删除数据
         */
        post: operations["removeByIdListUsingPOST_7"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 保存用户信息
         * @description 保存用户信息
         */
        post: operations["saveUsingPOST_7"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/setUseTokenExpireTime/{seconds}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 设置用户超时时间
         * @description 设置用户超时时间
         */
        get: operations["setUseTokenExpireTimeUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whManager/system/systemUser/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 修改用户信息
         * @description 修改用户信息
         */
        post: operations["updateUsingPOST_6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * 查询排序配置项
         * @description 查询排序配置项
         */
        ChaXunPaiXuPeiZhiXiang: {
            /**
             * @description 排序方式
             * @example ASC/asc;DESC/desc
             */
            orderType?: string;
            /** @description 属性名称 */
            propertyName?: string;
            [key: string]: unknown;
        };
        /**
         * DangerStatisticDTO
         * @description 危险等级数量统计
         */
        DangerStatisticDTO: {
            /**
             * Format: int32
             * @description 数量
             */
            count?: number;
            /** @description 危险等级 */
            dangerLevel?: string;
            [key: string]: unknown;
        };
        /**
         * LoginUserInfoDTO
         * @description 用户信息、角色信息、权限信息DTO
         */
        LoginUserInfoDTO: {
            /** @description 机构名 */
            deptName?: string;
            /** @description 权限集合 */
            permissionList?: string[];
            /** @description 角色集合 */
            roleList?: string[];
            systemUser?: components["schemas"]["SystemUserDuiXiang"];
            /** @description 用户主键id */
            userId?: string;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemDict对象»
         * @description 分页参数
         */
        PageParamSystemDictDuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["SystemDictDuiXiang"][];
            summary?: components["schemas"]["SystemDictDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemDictQueryDTO»
         * @description 分页参数
         */
        PageParamSystemDictQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["SystemDictQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemFile对象»Req
         * @description 分页参数
         */
        PageParamSystemFileDuiXiangReq: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["SystemFileDuiXiang"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemFile对象»Res
         * @description 分页参数
         */
        PageParamSystemFileDuiXiangRes: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["SystemFileDuiXiang"][];
            summary?: components["schemas"]["SystemFileDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemLog对象»
         * @description 分页参数
         */
        PageParamSystemLogDuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["SystemLogDuiXiang"][];
            summary?: components["schemas"]["SystemLogDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemLogQueryDTO»
         * @description 分页参数
         */
        PageParamSystemLogQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["SystemLogQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemModule对象»
         * @description 分页参数
         */
        PageParamSystemModuleDuiXiang: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["SystemModuleDuiXiang"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemUserDTO对象»
         * @description 分页参数
         */
        PageParamSystemUserDTODuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["SystemUserDTODuiXiang"][];
            summary?: components["schemas"]["SystemUserDTODuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«SystemUserQueryDTO»
         * @description 分页参数
         */
        PageParamSystemUserQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["SystemUserQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbEnterprise对象»
         * @description 分页参数
         */
        PageParamTbEnterpriseDuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbEnterpriseDuiXiang"][];
            summary?: components["schemas"]["TbEnterpriseDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbEnterpriseQueryDTO»
         * @description 分页参数
         */
        PageParamTbEnterpriseQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbEnterpriseQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbEqp对象»
         * @description 分页参数
         */
        PageParamTbEqpDuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbEqpDuiXiang"][];
            summary?: components["schemas"]["TbEqpDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbEqpQueryDTO»
         * @description 分页参数
         */
        PageParamTbEqpQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbEqpQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbEvaluateReport对象»
         * @description 分页参数
         */
        PageParamTbEvaluateReportDuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbEvaluateReportDuiXiang"][];
            summary?: components["schemas"]["TbEvaluateReportDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbEvaluateReportQueryDTO»
         * @description 分页参数
         */
        PageParamTbEvaluateReportQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbEvaluateReportQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbSafeEnviroManager对象»
         * @description 分页参数
         */
        PageParamTbSafeEnviroManagerDuiXiang: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbSafeEnviroManagerDuiXiang"][];
            summary?: components["schemas"]["TbSafeEnviroManagerDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbSafeEnviroManagerQueryDTO»
         * @description 分页参数
         */
        PageParamTbSafeEnviroManagerQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbSafeEnviroManagerQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbThirdUnitDTO»Req
         * @description 分页参数
         */
        PageParamTbThirdUnitDTOReq: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbThirdUnitDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbThirdUnitDTO»Res
         * @description 分页参数
         */
        PageParamTbThirdUnitDTORes: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbThirdUnitDTO"][];
            summary?: components["schemas"]["TbThirdUnitDTO"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbThirdUnit对象»Req
         * @description 分页参数
         */
        PageParamTbThirdUnitDuiXiangReq: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbThirdUnitDuiXiang"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbThirdUnit对象»Res
         * @description 分页参数
         */
        PageParamTbThirdUnitDuiXiangRes: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbThirdUnitDuiXiang"][];
            summary?: components["schemas"]["TbThirdUnitDuiXiang"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbThirdUnitParkDTO»
         * @description 分页参数
         */
        PageParamTbThirdUnitParkDTO: {
            /** @description 查询返回数据 */
            records?: components["schemas"]["TbThirdUnitParkDTO"][];
            summary?: components["schemas"]["TbThirdUnitParkDTO"];
            /**
             * Format: int64
             * @description 总条数
             */
            total?: number;
            [key: string]: unknown;
        };
        /**
         * PageParam«TbThirdUnitParkQueryDTO»
         * @description 分页参数
         */
        PageParamTbThirdUnitParkQueryDTO: {
            /**
             * Format: int64
             * @description 当前页
             * @example 1
             */
            current: number;
            /** @description 扩展参数 */
            extra?: Record<string, never>;
            /**
             * @description 排序信息
             * @example [
             *       {
             *         "propertyName": "",
             *         "orderType": ""
             *       }
             *     ]
             */
            orderConfigList?: components["schemas"]["ChaXunPaiXuPeiZhiXiang"][];
            query?: components["schemas"]["TbThirdUnitParkQueryDTO"];
            /**
             * Format: int64
             * @description 页面大小
             * @example 10
             */
            size: number;
            [key: string]: unknown;
        };
        /**
         * ProjectStatisticDTO
         * @description 企业项目数量统计
         */
        ProjectStatisticDTO: {
            /**
             * Format: int32
             * @description 企业总数
             */
            enterpriseCount?: number;
            /**
             * Format: int32
             * @description 项目总数
             */
            projectCount?: number;
            [key: string]: unknown;
        };
        /**
         * ReportTypeStatisticDTO
         * @description 报告类型数量统计
         */
        ReportTypeStatisticDTO: {
            /**
             * Format: int32
             * @description 数量
             */
            count?: number;
            /** @description 报告类型 */
            reportType?: string;
            [key: string]: unknown;
        };
        /** Result */
        Result: {
            /** Format: int32 */
            code?: number;
            data?: Record<string, never>;
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«DangerStatisticDTO»» */
        ResultListDangerStatisticDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["DangerStatisticDTO"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«ReportTypeStatisticDTO»» */
        ResultListReportTypeStatisticDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["ReportTypeStatisticDTO"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemDept对象»» */
        ResultListSystemDeptDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemDeptDuiXiang"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemDictData对象»» */
        ResultListSystemDictDataDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemDictDataDuiXiang"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemDict对象»» */
        ResultListSystemDictDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemDictDuiXiang"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemFileDTO»» */
        ResultListSystemFileDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemFileDTO"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemFile对象»» */
        ResultListSystemFileDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemFileDuiXiang"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemResourcesDTO对象»» */
        ResultListSystemResourcesDTODuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemResourcesDTODuiXiang"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«SystemRole对象»» */
        ResultListSystemRoleDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemRoleDuiXiang"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«TbThirdUnitLevelStatisticDTO»» */
        ResultListTbThirdUnitLevelStatisticDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbThirdUnitLevelStatisticDTO"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«List«TbThirdUnitTypeStatisticDTO»» */
        ResultListTbThirdUnitTypeStatisticDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbThirdUnitTypeStatisticDTO"][];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«LoginUserInfoDTO» */
        ResultLoginUserInfoDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["LoginUserInfoDTO"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«object» */
        Resultobject: {
            /** Format: int32 */
            code?: number;
            data?: Record<string, never>;
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«SystemDict对象»» */
        ResultPageParamSystemDictDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamSystemDictDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«SystemFile对象»» */
        ResultPageParamSystemFileDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamSystemFileDuiXiangRes"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«SystemLog对象»» */
        ResultPageParamSystemLogDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamSystemLogDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«SystemUserDTO对象»» */
        ResultPageParamSystemUserDTODuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamSystemUserDTODuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbEnterprise对象»» */
        ResultPageParamTbEnterpriseDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbEnterpriseDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbEqp对象»» */
        ResultPageParamTbEqpDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbEqpDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbEvaluateReport对象»» */
        ResultPageParamTbEvaluateReportDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbEvaluateReportDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbSafeEnviroManager对象»» */
        ResultPageParamTbSafeEnviroManagerDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbSafeEnviroManagerDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbThirdUnitDTO»» */
        ResultPageParamTbThirdUnitDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbThirdUnitDTORes"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbThirdUnit对象»» */
        ResultPageParamTbThirdUnitDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbThirdUnitDuiXiangRes"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«PageParam«TbThirdUnitParkDTO»» */
        ResultPageParamTbThirdUnitParkDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["PageParamTbThirdUnitParkDTO"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«ProjectStatisticDTO» */
        ResultProjectStatisticDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["ProjectStatisticDTO"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«string» */
        Resultstring: {
            /** Format: int32 */
            code?: number;
            data?: string;
            message?: string;
            [key: string]: unknown;
        };
        /** Result«SystemFile对象» */
        ResultSystemFileDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemFileDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«SystemLog对象» */
        ResultSystemLogDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemLogDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«SystemLogExtend» */
        ResultSystemLogExtend: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["SystemLogExtend"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbEnterpriseDTO» */
        ResultTbEnterpriseDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbEnterpriseDTO"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbEnterprise对象» */
        ResultTbEnterpriseDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbEnterpriseDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbEqp对象» */
        ResultTbEqpDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbEqpDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbEvaluateReportDTO» */
        ResultTbEvaluateReportDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbEvaluateReportDTO"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbEvaluateReport对象» */
        ResultTbEvaluateReportDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbEvaluateReportDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbSafeEnviroManager对象» */
        ResultTbSafeEnviroManagerDuiXiang: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbSafeEnviroManagerDuiXiang"];
            message?: string;
            [key: string]: unknown;
        };
        /** Result«TbThirdUnitSafeEduRecordDTO» */
        ResultTbThirdUnitSafeEduRecordDTO: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["TbThirdUnitSafeEduRecordDTO"];
            message?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDept对象
         * @description 机构表
         */
        SystemDeptDuiXiang: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 机构名 */
            deptName?: string;
            /** @description 机构全称 */
            fullName?: string;
            /** @description 主键id */
            id?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 父主键 */
            parentId?: string;
            /** @description 备注 */
            remark?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDeptSaveDTO
         * @description 机构保存DTO
         */
        SystemDeptSaveDTO: {
            /** @description 机构名 */
            deptName?: string;
            /** @description 机构全称 */
            fullName?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 父主键 */
            parentId: string;
            /** @description 备注 */
            remark?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDeptUpdateDTO
         * @description 机构修改DTO
         */
        SystemDeptUpdateDTO: {
            /** @description 机构名 */
            deptName?: string;
            /** @description 机构全称 */
            fullName?: string;
            /** @description id主键 */
            id: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 父主键 */
            parentId: string;
            /** @description 备注 */
            remark?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictData对象
         * @description 字典数据表
         */
        SystemDictDataDuiXiang: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 字典数据key */
            dataKey?: string;
            /** @description 上级字典数据key（构建树状使用） */
            dataParentKey?: string;
            /** @description 数据状态（1-启用，0-禁用） */
            dataStatus?: string;
            /** @description 字典数据value */
            dataValue?: string;
            /** @description 字典id */
            dictId?: string;
            /** @description 主键id */
            id?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 备注 */
            remark?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictDataQueryDTO
         * @description 字典数据查询DTO
         */
        SystemDictDataQueryDTO: {
            /** @description 字典id */
            dictId: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictDataSaveDTO
         * @description 字典数据信息保存DTO
         */
        SystemDictDataSaveDTO: {
            /** @description 字典数据key */
            dataKey: string;
            /** @description 上级字典数据key（构建树状使用） */
            dataParentKey?: string;
            /** @description 字典数据value */
            dataValue: string;
            /** @description 字典id */
            dictId: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx: number;
            /** @description 备注 */
            remark?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictDataUpdateDTO
         * @description 字典信息修改DTO
         */
        SystemDictDataUpdateDTO: {
            /** @description 字典数据key */
            dataKey: string;
            /** @description 上级字典数据key（构建树状使用） */
            dataParentKey?: string;
            /** @description 数据状态（1-启用，0-禁用） */
            dataStatus?: string;
            /** @description 字典数据value */
            dataValue: string;
            /** @description 字典id */
            dictId: string;
            /** @description id主键 */
            id: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx: number;
            /** @description 备注 */
            remark?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDict对象
         * @description 字典表
         */
        SystemDictDuiXiang: {
            /** @description 字典码 */
            code?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 数据状态（1-启用，0-禁用） */
            dataStatus?: string;
            /** @description 主键id */
            id?: string;
            /** @description 字典名称 */
            name?: string;
            /** @description 备注 */
            remark?: string;
            /** @description 字典类型(1-系统字典，2-业务字典) */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictQueryDTO
         * @description 字典查询DTO
         */
        SystemDictQueryDTO: {
            /** @description 字典码 */
            code?: string;
            /** @description 字典名称 */
            name?: string;
            /** @description 备注 */
            remark?: string;
            /** @description 字典类型(1-系统字典，2-业务字典) */
            type: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictSaveDTO
         * @description 字典信息保存DTO
         */
        SystemDictSaveDTO: {
            /** @description 字典码 */
            code: string;
            /** @description 字典名称 */
            name: string;
            /** @description 备注 */
            remark?: string;
            /** @description 字典类型(1-系统字典，2-业务字典) */
            type: string;
            [key: string]: unknown;
        };
        /**
         * SystemDictUpdateDTO
         * @description 字典信息修改DTO
         */
        SystemDictUpdateDTO: {
            /** @description 字典码 */
            code: string;
            /** @description 数据状态（1-启用，0-禁用） */
            dataStatus?: string;
            /** @description id主键 */
            id: string;
            /** @description 字典名称 */
            name: string;
            /** @description 备注 */
            remark?: string;
            /** @description 字典类型(1-系统字典，2-业务字典) */
            type: string;
            [key: string]: unknown;
        };
        /**
         * SystemFileDTO
         * @description 附件查询DTO
         */
        SystemFileDTO: {
            /** @description 文件类型 */
            contentType?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 文件状态 */
            dataStatus?: string;
            /** @description 存储目录 */
            dir?: string;
            /** @description 文件扩展名 */
            extName?: string;
            /** @description 主键id */
            id?: string;
            /** @description 文件md5值 */
            md5?: string;
            /** @description 文件名称 */
            name?: string;
            /** @description 附加业务关联1(业务类型) */
            param1?: string;
            /** @description 附加业务关联2(业务id1) */
            param2?: string;
            /** @description 附加业务关联3(业务id2) */
            param3?: string;
            /** @description 附加业务关联4 (业务id3) */
            param4?: string;
            /** @description 附加业务关联5 */
            param5?: string;
            /** @description 存储路径 */
            path?: string;
            /**
             * Format: int64
             * @description 文件大小
             */
            size?: number;
            /**
             * Format: int64
             * @description 总文件大小
             */
            totalSize?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemFile对象
         * @description 附件表
         */
        SystemFileDuiXiang: {
            /** @description 文件类型 */
            contentType?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 文件状态 */
            dataStatus?: string;
            /** @description 存储目录 */
            dir?: string;
            /** @description 文件扩展名 */
            extName?: string;
            /** @description 主键id */
            id?: string;
            /** @description 文件md5值 */
            md5?: string;
            /** @description 文件名称 */
            name?: string;
            /** @description 存储路径 */
            path?: string;
            /**
             * Format: int64
             * @description 文件大小
             */
            size?: number;
            /**
             * Format: int64
             * @description 总文件大小
             */
            totalSize?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemFileQueryDTO
         * @description 系统模块DTO
         */
        SystemFileQueryDTO: {
            /** @description 文件类型 */
            contentType?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 文件状态 */
            dataStatus?: string;
            /** @description 存储目录 */
            dir?: string;
            /** @description 文件扩展名 */
            extName?: string;
            /** @description 文件Id */
            fileId?: string;
            /** @description 主键id */
            id?: string;
            /** @description 文件md5值 */
            md5?: string;
            /** @description 文件名称 */
            name?: string;
            /** @description 附加业务关联1(业务类型) */
            param1?: string;
            /** @description 附加业务关联2(业务id1) */
            param2?: string;
            /** @description 附加业务关联3(业务id2) */
            param3?: string;
            /** @description 附加业务关联4 (业务id3) */
            param4?: string;
            /** @description 附加业务关联4 (业务id3) */
            param5?: string;
            /** @description 存储路径 */
            path?: string;
            /**
             * Format: int64
             * @description 文件大小
             */
            size?: number;
            /**
             * Format: int64
             * @description 总文件大小
             */
            totalSize?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemLog对象
         * @description 日志表
         */
        SystemLogDuiXiang: {
            /** @description 调用者ID */
            applyId?: string;
            /**
             * Format: date-time
             * @description 执行开始时间
             */
            beginRequestTime?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 执行结束时间
             */
            endRequestTime?: string;
            /** @description 异常类名 */
            exceptionClass?: string;
            /** @description 异常信息 */
            exceptionMessage?: string;
            /** @description 服务ID */
            groupId?: string;
            /** @description 服务名称 */
            groupName?: string;
            /** @description 主键id */
            id?: string;
            /** @description 日志说明 */
            logDescription?: string;
            /** @description 日志级别：INFO/ERROR */
            logLevel?: string;
            /** @description 访问入参 */
            requestParams?: string;
            /** @description 访问出参 */
            requestReturn?: string;
            /** @description 操作方式:POST/GET */
            requestType?: string;
            /** @description 请求URI */
            requestUri?: string;
            /** @description 服务ID */
            resourceId?: string;
            /** @description 服务名称 */
            resourceName?: string;
            /** @description 路由编码 */
            routeCode?: string;
            /**
             * Format: int64
             * @description 执行耗时
             */
            spendTime?: number;
            /** @description 当前调用ID */
            threadId?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemLogExtend
         * @description 日志扩展表
         */
        SystemLogExtend: {
            /** @description 主键id */
            id?: string;
            /** @description 异常信息 */
            logException?: string;
            /** @description 日志ID */
            logId?: string;
            /** @description 访问出参 */
            logReturn?: string;
            [key: string]: unknown;
        };
        /**
         * SystemLogQueryDTO
         * @description 日志查询DTO
         */
        SystemLogQueryDTO: {
            /**
             * Format: date-time
             * @description 执行开始时间-结束
             */
            beginRequestTimeEnd?: string;
            /**
             * Format: date-time
             * @description 执行开始时间-开始
             */
            beginRequestTimeStart?: string;
            /** @description 方法类 */
            className?: string;
            /** @description 操作人 */
            createBy?: string;
            /** @description 异常类名 */
            exceptionClass?: string;
            /** @description 异常信息 */
            exceptionMessage?: string;
            /** @description 日志说明 */
            logDescription?: string;
            /** @description 日志级别：INFO/ERROR */
            logLevel?: string;
            /** @description 方法名 */
            methodName?: string;
            /** @description 访问入参 */
            requestParams?: string;
            /** @description 访问出参 */
            requestReturn?: string;
            /** @description 操作方式:POST/GET */
            requestType?: string;
            /** @description 请求URI */
            requestUri?: string;
            /**
             * Format: int64
             * @description 执行耗时
             */
            spendTime?: number;
            [key: string]: unknown;
        };
        /**
         * SystemModuleDTO
         * @description 系统模块DTO
         */
        SystemModuleDTO: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 数据状态（1-已经删除，0-未删除） */
            dataStatus?: string;
            /** @description 模块图标 */
            icon?: string;
            /** @description 主键id */
            id?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 模块名称 */
            name?: string;
            /** @description 资源list */
            resourceIdList?: string[];
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemModule对象
         * @description 系统模块
         */
        SystemModuleDuiXiang: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 数据状态（1-已经删除，0-未删除） */
            dataStatus?: string;
            /** @description 模块图标 */
            icon?: string;
            /** @description 主键id */
            id?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 模块名称 */
            name?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemResourcesDTO对象
         * @description 资源信息DTO
         */
        SystemResourcesDTODuiXiang: {
            /** @description 菜单固定标签 */
            affix?: boolean;
            /** @description 访问组件名称 */
            componentName?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 授权标识 */
            enName?: string;
            /** @description 图标 */
            icon?: string;
            /** @description 主键id */
            id?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 资源名称 */
            name?: string;
            /** @description 父级资源id */
            parentId?: string;
            /** @description 备注 */
            remark?: string;
            /** @description 角色List */
            roleList?: string[];
            /** @description 资源类型：1-目录， 2-菜单 ，3-按钮 */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /** @description 访问路径 */
            url?: string;
            [key: string]: unknown;
        };
        /**
         * SystemResourcesQueryDTO
         * @description 资源信息查询DTO
         */
        SystemResourcesQueryDTO: {
            /** @description 角色id */
            roleId?: string;
            [key: string]: unknown;
        };
        /**
         * SystemResourcesSaveDTO
         * @description 资源信息保存DTO
         */
        SystemResourcesSaveDTO: {
            /** @description 菜单固定标签 */
            affix?: boolean;
            /** @description 访问组件名称 */
            componentName?: string;
            /** @description 授权标识 */
            enName?: string;
            /** @description 图标 */
            icon?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx: number;
            /** @description 资源名称 */
            name: string;
            /** @description 父级资源id */
            parentId: string;
            /** @description 备注 */
            remark?: string;
            /** @description 资源类型：1-目录， 2-菜单 ，3-按钮 */
            type: string;
            /** @description 访问路径 */
            url?: string;
            [key: string]: unknown;
        };
        /**
         * SystemResourcesUpdateDTO
         * @description 资源信息修改DTO
         */
        SystemResourcesUpdateDTO: {
            /** @description 菜单固定标签 */
            affix?: boolean;
            /** @description 访问组件名称 */
            componentName?: string;
            /** @description 授权标识 */
            enName?: string;
            /** @description 图标 */
            icon?: string;
            /** @description id主键 */
            id: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx: number;
            /** @description 资源名称 */
            name: string;
            /** @description 父级资源id */
            parentId: string;
            /** @description 备注 */
            remark?: string;
            /** @description 资源类型：1-目录， 2-菜单 ，3-按钮 */
            type: string;
            /** @description 访问路径 */
            url?: string;
            [key: string]: unknown;
        };
        /**
         * SystemRoleAssignResourceDTO
         * @description 角色分配资源DTO
         */
        SystemRoleAssignResourceDTO: {
            /** @description 角色ID */
            id: string;
            /** @description 资源idList */
            resourceIdList?: string[];
            [key: string]: unknown;
        };
        /**
         * SystemRole对象
         * @description 角色表
         */
        SystemRoleDuiXiang: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 角色名称(英文) */
            enName?: string;
            /** @description 主键id */
            id?: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx?: number;
            /** @description 角色名称 */
            name?: string;
            /** @description 父角色id */
            parentId?: string;
            /** @description 备注 */
            remark?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * SystemRoleSaveDTO
         * @description 角色信息保存DTO
         */
        SystemRoleSaveDTO: {
            /** @description 角色名称(英文) */
            enName: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx: number;
            /** @description 角色名称 */
            name: string;
            /** @description 父角色id */
            parentId?: string;
            /** @description 备注 */
            remark?: string;
            [key: string]: unknown;
        };
        /**
         * SystemRoleUpdateDTO
         * @description 角色信息修改DTO
         */
        SystemRoleUpdateDTO: {
            /** @description 角色名称(英文) */
            enName: string;
            /** @description 主键id */
            id: string;
            /**
             * Format: int32
             * @description 排序
             */
            idx: number;
            /** @description 角色名称 */
            name: string;
            /** @description 父角色id */
            parentId?: string;
            /** @description 备注 */
            remark?: string;
            [key: string]: unknown;
        };
        /**
         * SystemUserAssignRoleDTO
         * @description 用户分配角色DTO
         */
        SystemUserAssignRoleDTO: {
            /** @description 用户ID */
            id: string;
            /** @description 角色idList */
            roleIdList?: string[];
            [key: string]: unknown;
        };
        /**
         * SystemUserChangePasswordDTO
         * @description 修改密码DTO
         */
        SystemUserChangePasswordDTO: {
            /** @description 新密码 */
            newPassword: string;
            /** @description 旧密码 */
            oldPassword: string;
            [key: string]: unknown;
        };
        /**
         * SystemUserDTO对象
         * @description 用户信息表DTO
         */
        SystemUserDTODuiXiang: {
            /** @description 头像 */
            avatar?: string;
            /**
             * Format: date
             * @description 生日
             */
            birthday?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 数据状态（1-未删除，0-删除） */
            dataStatus?: string;
            /** @description 机构id */
            deptId?: string;
            /** @description 机构名 */
            deptName?: string;
            /** @description 在职状态：1-在职 0-离职 */
            dutyStatus?: string;
            /** @description 邮箱 */
            email?: string;
            /**
             * Format: date
             * @description 入职时间
             */
            entryDate?: string;
            /** @description 主键id */
            id?: string;
            /** @description 身份证号码 */
            idNum?: string;
            /** @description 职务 */
            job?: string;
            /** @description 昵称 */
            nickName?: string;
            /**
             * Format: date-time
             * @description 最后一次修改密码时间
             */
            passwordLastChangeTime?: string;
            /** @description 手机号 */
            phone?: string;
            /** @description 真名 */
            realName?: string;
            /** @description 关联ID：企业ID、第三方单位ID */
            relatedId?: string;
            /** @description 角色List */
            roleList?: components["schemas"]["SystemRoleDuiXiang"][];
            /** @description 性别（1-男，0-女） */
            sex?: string;
            /** @description 用户类型：1-企业用户 2-园区用户 3-第三方单位ID */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /** @description 用户名 */
            userName?: string;
            /** @description 密码 */
            userPassword?: string;
            /** @description 工种：1-特种作业 2-安全管理人员 3-危险化学品作业人员 4-剧毒化学品作业人员 */
            workerType?: string;
            [key: string]: unknown;
        };
        /**
         * SystemUser对象
         * @description 用户信息表
         */
        SystemUserDuiXiang: {
            /** @description 头像 */
            avatar?: string;
            /**
             * Format: date
             * @description 生日
             */
            birthday?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 数据状态（1-未删除，0-删除） */
            dataStatus?: string;
            /** @description 机构id */
            deptId?: string;
            /** @description 在职状态：1-在职 0-离职 */
            dutyStatus?: string;
            /** @description 邮箱 */
            email?: string;
            /**
             * Format: date
             * @description 入职时间
             */
            entryDate?: string;
            /** @description 主键id */
            id?: string;
            /** @description 身份证号码 */
            idNum?: string;
            /** @description 职务 */
            job?: string;
            /** @description 昵称 */
            nickName?: string;
            /**
             * Format: date-time
             * @description 最后一次修改密码时间
             */
            passwordLastChangeTime?: string;
            /** @description 手机号 */
            phone?: string;
            /** @description 真名 */
            realName?: string;
            /** @description 关联ID：企业ID、第三方单位ID */
            relatedId?: string;
            /** @description 性别（1-男，0-女） */
            sex?: string;
            /** @description 用户类型：1-企业用户 2-园区用户 3-第三方单位ID */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /** @description 用户名 */
            userName?: string;
            /** @description 密码 */
            userPassword?: string;
            /** @description 工种：1-特种作业 2-安全管理人员 3-危险化学品作业人员 4-剧毒化学品作业人员 */
            workerType?: string;
            [key: string]: unknown;
        };
        /**
         * SystemUserQueryDTO
         * @description 用户信息查询DTO
         */
        SystemUserQueryDTO: {
            /** @description 创建时间 */
            createTime?: string;
            /** @description 机构id */
            deptId?: string;
            /** @description 在职状态：1-在职 0-离职 */
            dutyStatus?: string;
            /** @description 职务 */
            job?: string;
            /** @description 昵称 */
            nickName?: string;
            /** @description 手机号 */
            phone?: string;
            /** @description 真名 */
            realName?: string;
            /** @description 关联ID：企业ID、第三方单位ID */
            relatedId?: string;
            /** @description 性别（1-男，0-女） */
            sex?: string;
            /** @description 用户类型：1-企业用户 2-园区用户 3-第三方单位ID */
            type?: string;
            /** @description 用户名 */
            userName?: string;
            [key: string]: unknown;
        };
        /**
         * SystemUserSaveDTO
         * @description 用户信息表保存DTO
         */
        SystemUserSaveDTO: {
            /** @description 头像 */
            avatar?: string;
            /**
             * Format: date
             * @description 生日
             */
            birthday?: string;
            /** @description 机构id */
            deptId?: string;
            /** @description 在职状态：1-在职 0-离职 */
            dutyStatus?: string;
            /** @description 邮箱 */
            email?: string;
            /**
             * Format: date
             * @description 入职时间
             */
            entryDate?: string;
            /** @description 身份证号码 */
            idNum?: string;
            /** @description 职务 */
            job?: string;
            /** @description 昵称 */
            nickName?: string;
            /** @description 手机号 */
            phone: string;
            /** @description 真名 */
            realName: string;
            /** @description 关联ID：企业ID、第三方单位ID */
            relatedId?: string;
            /** @description 性别（1-男，0-女） */
            sex: string;
            /** @description 用户类型：1-企业用户 2-园区用户 3-第三方单位ID */
            type?: string;
            /** @description 用户名 */
            userName: string;
            /** @description 密码 */
            userPassword: string;
            /** @description 工种：1-特种作业 2-安全管理人员 3-危险化学品作业人员 4-剧毒化学品作业人员 */
            workerType?: string;
            [key: string]: unknown;
        };
        /**
         * SystemUserUpdateDTO
         * @description 用户信息表修改DTO
         */
        SystemUserUpdateDTO: {
            /** @description 头像 */
            avatar?: string;
            /**
             * Format: date
             * @description 生日
             */
            birthday?: string;
            /** @description 数据状态（1-未删除，0-删除） */
            dataStatus?: string;
            /** @description 机构id */
            deptId?: string;
            /** @description 在职状态：1-在职 0-离职 */
            dutyStatus?: string;
            /** @description 邮箱 */
            email?: string;
            /**
             * Format: date
             * @description 入职时间
             */
            entryDate?: string;
            /** @description 主键id */
            id: string;
            /** @description 身份证号码 */
            idNum?: string;
            /** @description 职务 */
            job?: string;
            /** @description 昵称 */
            nickName?: string;
            /** @description 手机号 */
            phone: string;
            /** @description 真名 */
            realName: string;
            /** @description 关联ID：企业ID、第三方单位ID */
            relatedId?: string;
            /** @description 性别（1-男，0-女） */
            sex: string;
            /** @description 用户类型：1-企业用户 2-园区用户 3-第三方单位ID */
            type?: string;
            /** @description 用户名 */
            userName: string;
            /** @description 工种：1-特种作业 2-安全管理人员 3-危险化学品作业人员 4-剧毒化学品作业人员 */
            workerType?: string;
            [key: string]: unknown;
        };
        /**
         * TbEnterpriseDTO
         * @description 企业详情
         */
        TbEnterpriseDTO: {
            /** @description 企业详情地址 */
            address?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 经济类型：1-私营经济 2-国有经济 3-股份制 */
            economicType?: string;
            /**
             * Format: int32
             * @description 从业人员人数
             */
            employeeNum?: number;
            /**
             * Format: date
             * @description 成立日期
             */
            establishmentDate?: string;
            /**
             * Format: date
             * @description 有效期限-结束时间
             */
            expireDateEnd?: string;
            /**
             * Format: date
             * @description 有效期限-开始时间
             */
            expireDateStart?: string;
            /** @description 附件列表 */
            fileList?: components["schemas"]["SystemFileDTO"][];
            /**
             * Format: int32
             * @description 剧毒化学品作业人员人数
             */
            highlyToxicNum?: number;
            /** @description 主键id */
            id?: string;
            /** @description 所属行业：1-生产制造业 2-储存与批发零售 3-运输业 4-使用与处置 */
            industry?: string;
            /** @description 诚信等级 */
            integrityLevel?: string;
            /** @description 主要负责人名称 */
            mainMasterName?: string;
            /** @description 主要负责人电话 */
            mainMasterPhone?: string;
            /** @description 企业名称 */
            name?: string;
            /** @description 营业执照经营范围 */
            natureOfBusiness?: string;
            /** @description 生产场所地址 */
            productAddress?: string;
            /** @description 行政区划编码 */
            regionCode?: string;
            /** @description 行政区划名称 */
            regionName?: string;
            /** @description 安全负责人名称 */
            safeMasterName?: string;
            /** @description 安全负责人电话 */
            safeMasterPhone?: string;
            /** @description 安全生产许可编号 */
            safeProductAuthno?: string;
            /** @description 统一社会信用代码 */
            socialCode?: string;
            /**
             * Format: int32
             * @description 特殊作业人员人数
             */
            specialPersonNum?: number;
            /** @description 监管分类：1-一般监督 2-终点关注 3-特别监管 */
            superviseType?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 职工人数
             */
            workerNum?: number;
            [key: string]: unknown;
        };
        /**
         * TbEnterprise对象
         * @description 企业信息
         */
        TbEnterpriseDuiXiang: {
            /** @description 企业详情地址 */
            address?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 经济类型：1-私营经济 2-国有经济 3-股份制 */
            economicType?: string;
            /**
             * Format: int32
             * @description 从业人员人数
             */
            employeeNum?: number;
            /**
             * Format: date
             * @description 成立日期
             */
            establishmentDate?: string;
            /**
             * Format: date
             * @description 有效期限-结束时间
             */
            expireDateEnd?: string;
            /**
             * Format: date
             * @description 有效期限-开始时间
             */
            expireDateStart?: string;
            /**
             * Format: int32
             * @description 剧毒化学品作业人员人数
             */
            highlyToxicNum?: number;
            /** @description 主键id */
            id?: string;
            /** @description 所属行业：1-生产制造业 2-储存与批发零售 3-运输业 4-使用与处置 */
            industry?: string;
            /** @description 诚信等级 */
            integrityLevel?: string;
            /** @description 主要负责人名称 */
            mainMasterName?: string;
            /** @description 主要负责人电话 */
            mainMasterPhone?: string;
            /** @description 企业名称 */
            name?: string;
            /** @description 营业执照经营范围 */
            natureOfBusiness?: string;
            /** @description 生产场所地址 */
            productAddress?: string;
            /** @description 行政区划编码 */
            regionCode?: string;
            /** @description 行政区划名称 */
            regionName?: string;
            /** @description 安全负责人名称 */
            safeMasterName?: string;
            /** @description 安全负责人电话 */
            safeMasterPhone?: string;
            /** @description 安全生产许可编号 */
            safeProductAuthno?: string;
            /** @description 统一社会信用代码 */
            socialCode?: string;
            /**
             * Format: int32
             * @description 特殊作业人员人数
             */
            specialPersonNum?: number;
            /** @description 监管分类：1-一般监督 2-终点关注 3-特别监管 */
            superviseType?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 职工人数
             */
            workerNum?: number;
            [key: string]: unknown;
        };
        /**
         * TbEnterpriseQueryDTO
         * @description 企业信息查询
         */
        TbEnterpriseQueryDTO: {
            /** @description 企业详情地址 */
            address?: string;
            /** @description 经济类型：1-私营经济 2-国有经济 3-股份制 */
            economicType?: string;
            /**
             * Format: int32
             * @description 从业人员人数
             */
            employeeNum?: number;
            /**
             * Format: date
             * @description 成立日期
             */
            establishmentDate?: string;
            /**
             * Format: date
             * @description 有效期限-结束时间
             */
            expireDateEnd?: string;
            /**
             * Format: date
             * @description 有效期限-开始时间
             */
            expireDateStart?: string;
            /**
             * Format: int32
             * @description 剧毒化学品作业人员人数
             */
            highlyToxicNum?: number;
            /** @description 所属行业：1-生产制造业 2-储存与批发零售 3-运输业 4-使用与处置 */
            industry?: string;
            /** @description 诚信等级 */
            integrityLevel?: string;
            /** @description 主要负责人名称 */
            mainMasterName?: string;
            /** @description 主要负责人电话 */
            mainMasterPhone?: string;
            /** @description 营业执照经营范围 */
            natureOfBusiness?: string;
            /** @description 生产场所地址 */
            productAddress?: string;
            /** @description 行政区划编码 */
            regionCode?: string;
            /** @description 行政区划名称 */
            regionName?: string;
            /** @description 安全负责人名称 */
            safeMasterName?: string;
            /** @description 安全负责人电话 */
            safeMasterPhone?: string;
            /** @description 安全生产许可编号 */
            safeProductAuthno?: string;
            /** @description 统一社会信用代码 */
            socialCode?: string;
            /**
             * Format: int32
             * @description 特殊作业人员人数
             */
            specialPersonNum?: number;
            /** @description 监管分类：1-一般监督 2-终点关注 3-特别监管 */
            superviseType?: string;
            /**
             * Format: int32
             * @description 职工人数
             */
            workerNum?: number;
            [key: string]: unknown;
        };
        /**
         * TbEnterpriseSaveOrUpdateDTO
         * @description 企业添加或更新
         */
        TbEnterpriseSaveOrUpdateDTO: {
            /** @description 企业详情地址 */
            address?: string;
            /** @description 经济类型：1-私营经济 2-国有经济 3-股份制 */
            economicType?: string;
            /**
             * Format: int32
             * @description 从业人员人数
             */
            employeeNum?: number;
            /**
             * Format: date
             * @description 成立日期
             */
            establishmentDate?: string;
            /**
             * Format: date
             * @description 有效期限-结束时间
             */
            expireDateEnd?: string;
            /**
             * Format: date
             * @description 有效期限-开始时间
             */
            expireDateStart?: string;
            /** @description 附件列表 */
            fileIdList?: string[];
            /**
             * Format: int32
             * @description 剧毒化学品作业人员人数
             */
            highlyToxicNum?: number;
            /** @description 主键ID */
            id?: string;
            /** @description 所属行业：1-生产制造业 2-储存与批发零售 3-运输业 4-使用与处置 */
            industry?: string;
            /** @description 诚信等级 */
            integrityLevel?: string;
            /** @description 主要负责人名称 */
            mainMasterName?: string;
            /** @description 主要负责人电话 */
            mainMasterPhone?: string;
            /** @description 企业名称 */
            name?: string;
            /** @description 营业执照经营范围 */
            natureOfBusiness?: string;
            /** @description 生产场所地址 */
            productAddress?: string;
            /** @description 行政区划编码 */
            regionCode?: string;
            /** @description 行政区划名称 */
            regionName?: string;
            /** @description 安全负责人名称 */
            safeMasterName?: string;
            /** @description 安全负责人电话 */
            safeMasterPhone?: string;
            /** @description 安全生产许可编号 */
            safeProductAuthno?: string;
            /** @description 统一社会信用代码 */
            socialCode?: string;
            /**
             * Format: int32
             * @description 特殊作业人员人数
             */
            specialPersonNum?: number;
            /** @description 监管分类：1-一般监督 2-终点关注 3-特别监管 */
            superviseType?: string;
            /**
             * Format: int32
             * @description 职工人数
             */
            workerNum?: number;
            [key: string]: unknown;
        };
        /**
         * TbEqp对象
         * @description 业务模块-设备表
         */
        TbEqpDuiXiang: {
            /**
             * Format: date
             * @description 检验日期
             */
            checkDate?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 设备编号 */
            eqpCode?: string;
            /**
             * Format: int32
             * @description 数量
             */
            eqpNum?: number;
            /** @description 设备规格 */
            eqpSpecifications?: string;
            /** @description 主键id */
            id?: string;
            /** @description 设备名称 */
            name?: string;
            /** @description 设备状态：1-正常 2-停用 3-检修 */
            status?: string;
            /** @description 所属类型 */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: date
             * @description 使用日期
             */
            useDate?: string;
            [key: string]: unknown;
        };
        /**
         * TbEqpQueryDTO
         * @description 设备信息查询
         */
        TbEqpQueryDTO: {
            /**
             * Format: date
             * @description 检验日期开始时间
             */
            checkDateEnd?: string;
            /**
             * Format: date
             * @description 检验日期开始时间
             */
            checkDateStart?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 设备编号 */
            eqpCode?: string;
            /**
             * Format: int32
             * @description 数量
             */
            eqpNum?: number;
            /** @description 设备规格 */
            eqpSpecifications?: string;
            /** @description 设备名称 */
            name?: string;
            /** @description 设备状态：1-正常 2-停用 3-检修 */
            status?: string;
            /** @description 所属类型 */
            type?: string;
            /**
             * Format: date
             * @description 使用日期
             */
            useDate?: string;
            [key: string]: unknown;
        };
        /**
         * TbEqpSaveOrUpdateDTO
         * @description 评价评估报告表更新或保存
         */
        TbEqpSaveOrUpdateDTO: {
            /** @description 危险源等级：1-一级 2-二级 3-三级 4-四级 0-非重大 */
            dangerLevel?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /**
             * Format: date-time
             * @description 评估时间
             */
            evaluateTime?: string;
            /** @description 附件列表 */
            fileIdList?: string[];
            /** @description 主键ID */
            id?: string;
            /** @description 项目名称 */
            projectName?: string;
            /** @description 报告编号 */
            reportCode?: string;
            /** @description 报告类型：1-定性评估报告 2-定量评估报告 3-综合评估报告 4-定期评估报告 5-专项评估报告 */
            reportType?: string;
            /** @description 评审意见 */
            reviewComments?: string;
            [key: string]: unknown;
        };
        /**
         * TbEvaluateReportDTO
         * @description 评价评估报告表
         */
        TbEvaluateReportDTO: {
            /** @description 危险源等级：1-一级 2-二级 3-三级 4-四级 0-非重大 */
            dangerLevel?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /**
             * Format: date-time
             * @description 评估时间
             */
            evaluateTime?: string;
            /** @description 附件列表 */
            fileList?: components["schemas"]["SystemFileDTO"][];
            /** @description 主键ID */
            id?: string;
            /** @description 项目名称 */
            projectName?: string;
            /** @description 报告编号 */
            reportCode?: string;
            /** @description 报告类型：1-定性评估报告 2-定量评估报告 3-综合评估报告 4-定期评估报告 5-专项评估报告 */
            reportType?: string;
            /** @description 评审意见 */
            reviewComments?: string;
            [key: string]: unknown;
        };
        /**
         * TbEvaluateReport对象
         * @description 评价评估报告表
         */
        TbEvaluateReportDuiXiang: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 危险源等级：1-一级 2-二级 3-三级 4-四级 0-非重大 */
            dangerLevel?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /**
             * Format: date-time
             * @description 评估时间
             */
            evaluateTime?: string;
            /** @description 主键id */
            id?: string;
            /** @description 项目名称 */
            projectName?: string;
            /** @description 报告编号 */
            reportCode?: string;
            /** @description 报告类型：1-定性评估报告 2-定量评估报告 3-综合评估报告 4-定期评估报告 5-专项评估报告 */
            reportType?: string;
            /** @description 评审意见 */
            reviewComments?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * TbEvaluateReportQueryDTO
         * @description 评价评估报告表查询
         */
        TbEvaluateReportQueryDTO: {
            /** @description 危险源等级：1-一级 2-二级 3-三级 4-四级 0-非重大 */
            dangerLevel?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /**
             * Format: date-time
             * @description 评估时间-结束时间
             */
            evaluateTimeEnd?: string;
            /**
             * Format: date-time
             * @description 评估时间-开始时间
             */
            evaluateTimeStart?: string;
            /** @description 报告类型：1-定性评估报告 2-定量评估报告 3-综合评估报告 4-定期评估报告 5-专项评估报告 */
            reportType?: string;
            [key: string]: unknown;
        };
        /**
         * TbEvaluateReportReviewCommentsDTO
         * @description 评审意见
         */
        TbEvaluateReportReviewCommentsDTO: {
            /** @description 主键ID */
            id?: string;
            /** @description 评审意见 */
            reviewComments?: string;
            [key: string]: unknown;
        };
        /**
         * TbSafeEnviroManager对象
         * @description 业务模块-安全与环境管理信息表
         */
        TbSafeEnviroManagerDuiXiang: {
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 文件ID */
            fileId?: string;
            /** @description 文件名称 */
            fileName?: string;
            /** @description 主键id */
            id?: string;
            /** @description 所属类型 */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * TbSafeEnviroManagerQueryDTO
         * @description 安全与环境管理信息表查询
         */
        TbSafeEnviroManagerQueryDTO: {
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 文件名称 */
            fileName?: string;
            /** @description 所属类型 */
            type?: string;
            [key: string]: unknown;
        };
        /**
         * TbSafeEnviroManagerSaveOrUpdateDTO
         * @description 安全与环境管理信息表添加或更新
         */
        TbSafeEnviroManagerSaveOrUpdateDTO: {
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 文件ID */
            fileId?: string;
            /** @description 文件名称 */
            fileName?: string;
            /** @description 所属类型 */
            type?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitAuditDTO
         * @description 第三方单位对象园区端
         */
        TbThirdUnitAuditDTO: {
            /** @description 审核结果：2-审核通过 3-审核驳回 */
            status?: string;
            /** @description 第三方单位ID */
            thirdUnitId?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitDTO
         * @description 第三方单位对象企业端
         */
        TbThirdUnitDTO: {
            /** @description 单位地址 */
            address?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 邮箱 */
            email?: string;
            /**
             * Format: date
             * @description 资质有效期
             */
            expireDate?: string;
            /** @description 主键id */
            id?: string;
            /** @description 主要负责人名称 */
            masterName?: string;
            /** @description 主要负责人电话 */
            masterPhone?: string;
            /** @description 单位名称 */
            name?: string;
            /** @description 资质等级 */
            qualificationLevel?: string;
            /** @description 状态：1-待审核 2-审核通过 3-审核驳回 */
            status?: string;
            /** @description 培训内容 */
            trainContent?: string;
            /** @description 培训状态：1-已培训 0-未培训 */
            trainStatus?: string;
            /**
             * Format: date
             * @description 培训时间
             */
            trainTime?: string;
            /** @description 单位类别 */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnit对象
         * @description 第三方单位
         */
        TbThirdUnitDuiXiang: {
            /** @description 单位地址 */
            address?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 邮箱 */
            email?: string;
            /**
             * Format: date
             * @description 资质有效期
             */
            expireDate?: string;
            /** @description 主键id */
            id?: string;
            /** @description 主要负责人名称 */
            masterName?: string;
            /** @description 主要负责人电话 */
            masterPhone?: string;
            /** @description 单位名称 */
            name?: string;
            /** @description 资质等级 */
            qualificationLevel?: string;
            /** @description 状态：1-待审核 2-审核通过 3-审核驳回 */
            status?: string;
            /** @description 单位类别 */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitEmailRemindDTO
         * @description 邮件提醒
         */
        TbThirdUnitEmailRemindDTO: {
            /** @description 内容 */
            content?: string;
            /** @description 邮箱地址 */
            email?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitLevelStatisticDTO
         * @description 第三方单位等级统计
         */
        TbThirdUnitLevelStatisticDTO: {
            /**
             * Format: int32
             * @description 数量
             */
            count?: number;
            /** @description 等级 */
            level?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitParkDTO
         * @description 第三方单位对象园区端
         */
        TbThirdUnitParkDTO: {
            /** @description 单位地址 */
            address?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 邮箱 */
            email?: string;
            /** @description 企业名称，多个逗号隔开 */
            enterpriseNames?: string;
            /**
             * Format: date
             * @description 资质有效期
             */
            expireDate?: string;
            /** @description 主键id */
            id?: string;
            /** @description 主要负责人名称 */
            masterName?: string;
            /** @description 主要负责人电话 */
            masterPhone?: string;
            /** @description 单位名称 */
            name?: string;
            /** @description 资质等级 */
            qualificationLevel?: string;
            /** @description 状态：1-待审核 2-审核通过 3-审核驳回 */
            status?: string;
            /** @description 单位类别 */
            type?: string;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitParkQueryDTO
         * @description 第三方单位查询对象园区端
         */
        TbThirdUnitParkQueryDTO: {
            /** @description 企业ID */
            enterpriseId?: string;
            /**
             * Format: date
             * @description 资质到期时间-结束时间
             */
            expireDateEnd?: string;
            /**
             * Format: date
             * @description 资质到期时间-开始时间
             */
            expireDateStart?: string;
            /** @description 资质等级 */
            qualificationLevel?: string;
            /** @description 状态：1-待审核 2-审核通过 3-审核驳回 */
            status?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitRegisterDTO
         * @description 第三方单位注册
         */
        TbThirdUnitRegisterDTO: {
            /** @description 单位地址 */
            address?: string;
            /** @description 邮箱 */
            email?: string;
            /** @description 关联企业ID列表 */
            enterpriseIdList?: string[];
            /**
             * Format: date
             * @description 资质有效期
             */
            expireDate?: string;
            /** @description 资质附件ID列表 */
            fileIdList?: string[];
            /** @description 主要负责人名称 */
            masterName?: string;
            /** @description 主要负责人电话 */
            masterPhone?: string;
            /** @description 单位名称 */
            name?: string;
            /** @description 资质等级 */
            qualificationLevel?: string;
            /** @description 单位类别 */
            type?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitSafeEduRecordDTO
         * @description 第三方单位安全教育记录
         */
        TbThirdUnitSafeEduRecordDTO: {
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 附件列表 */
            fileList?: components["schemas"]["SystemFileDTO"][];
            /** @description 图片列表 */
            imageList?: components["schemas"]["SystemFileDTO"][];
            /** @description 第三方单位ID */
            thirdUnitId?: string;
            /** @description 培训内容 */
            trainContent?: string;
            /**
             * Format: date
             * @description 培训时间
             */
            trainTime?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitSafeEduRecordQueryDTO
         * @description 第三方单位安全教育记录查询
         */
        TbThirdUnitSafeEduRecordQueryDTO: {
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 第三方单位ID */
            thirdUnitId?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitTypeStatisticDTO
         * @description 第三方单位类型统计
         */
        TbThirdUnitTypeStatisticDTO: {
            /**
             * Format: int32
             * @description 数量
             */
            count?: number;
            /** @description 类型 */
            type?: string;
            [key: string]: unknown;
        };
        /**
         * TbThirdUnitUploadSafeEduRecordDTO
         * @description 第三方单位上传安全教育记录
         */
        TbThirdUnitUploadSafeEduRecordDTO: {
            /** @description 企业ID */
            enterpriseId?: string;
            /** @description 附件列表 */
            fileIdList?: string[];
            /** @description 图片列表 */
            imageIdList?: string[];
            /** @description 第三方单位ID */
            thirdUnitId?: string;
            /** @description 培训内容 */
            trainContent?: string;
            /**
             * Format: date
             * @description 培训时间
             */
            trainTime?: string;
            [key: string]: unknown;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: {
        /** @description 删除id的list */
        removeByIdListUsingPOSTIdlist: {
            content: {
                "application/json": unknown;
            };
        };
        /** @description dto */
        TbEqpSaveOrUpdateDTO: {
            content: {
                "application/json": components["schemas"]["TbEqpSaveOrUpdateDTO"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    deleteByIdUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getByIdUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbEnterpriseDTO"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPageUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbEnterpriseQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbEnterpriseDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveOrUpdateUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbEnterpriseSaveOrUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbEnterpriseDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteByIdUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPageUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbEqpQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbEqpDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveOrUpdateUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["TbEqpSaveOrUpdateDTO"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbEqpDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dangerStatisticUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description year */
                year: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListDangerStatisticDTO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteByIdUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getByIdUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbEvaluateReportDTO"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPageUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbEvaluateReportQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbEvaluateReportDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    projectStatisticUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description year */
                year: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultProjectStatisticDTO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    reportTypeStatisticUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description year */
                year: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListReportTypeStatisticDTO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    reviewCommentsUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbEvaluateReportReviewCommentsDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveOrUpdateUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["TbEqpSaveOrUpdateDTO"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbEvaluateReportDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteByIdUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPageUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbSafeEnviroManagerQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbSafeEnviroManagerDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveOrUpdateUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbSafeEnviroManagerSaveOrUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbSafeEnviroManagerDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    auditUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbThirdUnitAuditDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    emailRemindUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbThirdUnitEmailRemindDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAppPageUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbThirdUnitDuiXiangReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbThirdUnitDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getArchiveCountUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getEnterprisePageUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbThirdUnitDTOReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbThirdUnitDTO"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getParkPageUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamTbThirdUnitParkQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamTbThirdUnitParkDTO"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getSafeEduRecordUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbThirdUnitSafeEduRecordQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultTbThirdUnitSafeEduRecordDTO"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    levelStatisticUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListTbThirdUnitLevelStatisticDTO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    registerUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbThirdUnitRegisterDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    typeStatisticUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListTbThirdUnitTypeStatisticDTO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadSafeEduRecordUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["TbThirdUnitUploadSafeEduRecordDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemDeptDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDeptSaveDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDeptUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemDictDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listPageUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamSystemDictQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamSystemDictDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDictSaveDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDictUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description queryDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDictDataQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemDictDataDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDictDataSaveDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemDictDataUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    downloadUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    downloadLocalFileUsingGET: {
        parameters: {
            query: {
                /** @description fileName */
                fileName: string;
                /** @description localFileDir */
                localFileDir?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getListUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description systemFile */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemFileDuiXiang"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemFileDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description queryDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemFileQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemFileDTO"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listPageUsingPOST_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamSystemFileDuiXiangReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamSystemFileDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description file */
        requestBody?: {
            content: {
                "multipart/form-data": string;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultSystemFileDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getByThreadIdUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description threadId */
                threadId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultSystemLogDuiXiang"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listPageUsingPOST_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamSystemLogQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamSystemLogDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description systemLogSaveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemLogQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultstring"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getByLogIdUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description logId */
                logId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultSystemLogExtend"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAllUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getResourcesUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 模块id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listPageUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamSystemModuleDuiXiang"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamSystemUserDTODuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listResourcesByModuleIdUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description idList */
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemModuleDuiXiang"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    settingResourcesUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description dto */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemModuleDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultobject"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemModuleDuiXiang"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listUsingPOST_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description queryDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemResourcesQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemResourcesDTODuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemResourcesSaveDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemResourcesUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    assignResourceUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description assignResourceDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemRoleAssignResourceDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listUsingPOST_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultListSystemRoleDuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemRoleSaveDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemRoleUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    assignRoleUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description assignRoleDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemUserAssignRoleDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    changePasswordUsingPOST: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description changePasswordDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemUserChangePasswordDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultstring"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getCurrUserInfoUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultLoginUserInfoDTO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listPageUsingPOST_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description pageParam */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageParamSystemUserQueryDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ResultPageParamSystemUserDTODuiXiang"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeByIdListUsingPOST_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["removeByIdListUsingPOSTIdlist"];
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveUsingPOST_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description saveDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemUserSaveDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Resultstring"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    setUseTokenExpireTimeUsingGET: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description seconds */
                seconds: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUsingPOST_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description updateDTO */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SystemUserUpdateDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Result"];
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}


export type WhManagerBsTbEnterpriseDeleteByIdIdUsingPostOperation = paths['/whManager/bs/tbEnterprise/deleteById/{id}']['post'];

export type WhManagerBsTbEnterpriseDeleteByIdIdUsingPostPath = WhManagerBsTbEnterpriseDeleteByIdIdUsingPostOperation['parameters']['path']

export interface WhManagerBsTbEnterpriseDeleteByIdIdUsingPostOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEnterpriseDeleteByIdIdUsingPostPath;
}

export type WhManagerBsTbEnterpriseDeleteByIdIdUsingPostResult = Required<WhManagerBsTbEnterpriseDeleteByIdIdUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEnterpriseGetByIdIdUsingPostOperation = paths['/whManager/bs/tbEnterprise/getById/{id}']['post'];

export type WhManagerBsTbEnterpriseGetByIdIdUsingPostPath = WhManagerBsTbEnterpriseGetByIdIdUsingPostOperation['parameters']['path']

export interface WhManagerBsTbEnterpriseGetByIdIdUsingPostOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEnterpriseGetByIdIdUsingPostPath;
}

export type WhManagerBsTbEnterpriseGetByIdIdUsingPostResult = Required<WhManagerBsTbEnterpriseGetByIdIdUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEnterpriseGetPageUsingPostOperation = paths['/whManager/bs/tbEnterprise/getPage']['post'];

export type WhManagerBsTbEnterpriseGetPageUsingPostBody = Required<WhManagerBsTbEnterpriseGetPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEnterpriseGetPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEnterpriseGetPageUsingPostBody;
}

export type WhManagerBsTbEnterpriseGetPageUsingPostResult = Required<WhManagerBsTbEnterpriseGetPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEnterpriseSaveOrUpdateUsingPostOperation = paths['/whManager/bs/tbEnterprise/saveOrUpdate']['post'];

export type WhManagerBsTbEnterpriseSaveOrUpdateUsingPostBody = Required<WhManagerBsTbEnterpriseSaveOrUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEnterpriseSaveOrUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEnterpriseSaveOrUpdateUsingPostBody;
}

export type WhManagerBsTbEnterpriseSaveOrUpdateUsingPostResult = Required<WhManagerBsTbEnterpriseSaveOrUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEqpDeleteByIdIdUsingPostOperation = paths['/whManager/bs/tbEqp/deleteById/{id}']['post'];

export type WhManagerBsTbEqpDeleteByIdIdUsingPostPath = WhManagerBsTbEqpDeleteByIdIdUsingPostOperation['parameters']['path']

export interface WhManagerBsTbEqpDeleteByIdIdUsingPostOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEqpDeleteByIdIdUsingPostPath;
}

export type WhManagerBsTbEqpDeleteByIdIdUsingPostResult = Required<WhManagerBsTbEqpDeleteByIdIdUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEqpGetPageUsingPostOperation = paths['/whManager/bs/tbEqp/getPage']['post'];

export type WhManagerBsTbEqpGetPageUsingPostBody = Required<WhManagerBsTbEqpGetPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEqpGetPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEqpGetPageUsingPostBody;
}

export type WhManagerBsTbEqpGetPageUsingPostResult = Required<WhManagerBsTbEqpGetPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEqpSaveOrUpdateUsingPostOperation = paths['/whManager/bs/tbEqp/saveOrUpdate']['post'];

export type WhManagerBsTbEqpSaveOrUpdateUsingPostBody = Required<WhManagerBsTbEqpSaveOrUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEqpSaveOrUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEqpSaveOrUpdateUsingPostBody;
}

export type WhManagerBsTbEqpSaveOrUpdateUsingPostResult = Required<WhManagerBsTbEqpSaveOrUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetOperation = paths['/whManager/bs/tbEvaluateReport/dangerStatistic/{year}']['get'];

export type WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetPath = WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetOperation['parameters']['path']

export interface WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetPath;
}

export type WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetResult = Required<WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostOperation = paths['/whManager/bs/tbEvaluateReport/deleteById/{id}']['post'];

export type WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostPath = WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostOperation['parameters']['path']

export interface WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostPath;
}

export type WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostResult = Required<WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportGetByIdIdUsingPostOperation = paths['/whManager/bs/tbEvaluateReport/getById/{id}']['post'];

export type WhManagerBsTbEvaluateReportGetByIdIdUsingPostPath = WhManagerBsTbEvaluateReportGetByIdIdUsingPostOperation['parameters']['path']

export interface WhManagerBsTbEvaluateReportGetByIdIdUsingPostOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEvaluateReportGetByIdIdUsingPostPath;
}

export type WhManagerBsTbEvaluateReportGetByIdIdUsingPostResult = Required<WhManagerBsTbEvaluateReportGetByIdIdUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportGetPageUsingPostOperation = paths['/whManager/bs/tbEvaluateReport/getPage']['post'];

export type WhManagerBsTbEvaluateReportGetPageUsingPostBody = Required<WhManagerBsTbEvaluateReportGetPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEvaluateReportGetPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEvaluateReportGetPageUsingPostBody;
}

export type WhManagerBsTbEvaluateReportGetPageUsingPostResult = Required<WhManagerBsTbEvaluateReportGetPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetOperation = paths['/whManager/bs/tbEvaluateReport/projectStatistic/{year}']['get'];

export type WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetPath = WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetOperation['parameters']['path']

export interface WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetPath;
}

export type WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetResult = Required<WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetOperation = paths['/whManager/bs/tbEvaluateReport/reportTypeStatistic/{year}']['get'];

export type WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetPath = WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetOperation['parameters']['path']

export interface WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetPath;
}

export type WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetResult = Required<WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportReviewCommentsUsingPostOperation = paths['/whManager/bs/tbEvaluateReport/reviewComments']['post'];

export type WhManagerBsTbEvaluateReportReviewCommentsUsingPostBody = Required<WhManagerBsTbEvaluateReportReviewCommentsUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEvaluateReportReviewCommentsUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEvaluateReportReviewCommentsUsingPostBody;
}

export type WhManagerBsTbEvaluateReportReviewCommentsUsingPostResult = Required<WhManagerBsTbEvaluateReportReviewCommentsUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostOperation = paths['/whManager/bs/tbEvaluateReport/saveOrUpdate']['post'];

export type WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostBody = Required<WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostBody;
}

export type WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostResult = Required<WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostOperation = paths['/whManager/bs/tbSafeEnviroManager/deleteById/{id}']['post'];

export type WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostPath = WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostOperation['parameters']['path']

export interface WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostOptions {
  [key: string]: unknown;
  path: WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostPath;
}

export type WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostResult = Required<WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbSafeEnviroManagerGetPageUsingPostOperation = paths['/whManager/bs/tbSafeEnviroManager/getPage']['post'];

export type WhManagerBsTbSafeEnviroManagerGetPageUsingPostBody = Required<WhManagerBsTbSafeEnviroManagerGetPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbSafeEnviroManagerGetPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbSafeEnviroManagerGetPageUsingPostBody;
}

export type WhManagerBsTbSafeEnviroManagerGetPageUsingPostResult = Required<WhManagerBsTbSafeEnviroManagerGetPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostOperation = paths['/whManager/bs/tbSafeEnviroManager/saveOrUpdate']['post'];

export type WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostBody = Required<WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostBody;
}

export type WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostResult = Required<WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitAuditUsingPostOperation = paths['/whManager/bs/tbThirdUnit/audit']['post'];

export type WhManagerBsTbThirdUnitAuditUsingPostBody = Required<WhManagerBsTbThirdUnitAuditUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitAuditUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitAuditUsingPostBody;
}

export type WhManagerBsTbThirdUnitAuditUsingPostResult = Required<WhManagerBsTbThirdUnitAuditUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitEmailRemindUsingPostOperation = paths['/whManager/bs/tbThirdUnit/emailRemind']['post'];

export type WhManagerBsTbThirdUnitEmailRemindUsingPostBody = Required<WhManagerBsTbThirdUnitEmailRemindUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitEmailRemindUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitEmailRemindUsingPostBody;
}

export type WhManagerBsTbThirdUnitEmailRemindUsingPostResult = Required<WhManagerBsTbThirdUnitEmailRemindUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitGetAppPageUsingPostOperation = paths['/whManager/bs/tbThirdUnit/getAppPage']['post'];

export type WhManagerBsTbThirdUnitGetAppPageUsingPostBody = Required<WhManagerBsTbThirdUnitGetAppPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitGetAppPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitGetAppPageUsingPostBody;
}

export type WhManagerBsTbThirdUnitGetAppPageUsingPostResult = Required<WhManagerBsTbThirdUnitGetAppPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitGetArchiveCountUsingGetOperation = paths['/whManager/bs/tbThirdUnit/getArchiveCount']['get'];

export interface WhManagerBsTbThirdUnitGetArchiveCountUsingGetOptions {
  [key: string]: unknown;
}

export type WhManagerBsTbThirdUnitGetArchiveCountUsingGetResult = Required<WhManagerBsTbThirdUnitGetArchiveCountUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitGetEnterprisePageUsingPostOperation = paths['/whManager/bs/tbThirdUnit/getEnterprisePage']['post'];

export type WhManagerBsTbThirdUnitGetEnterprisePageUsingPostBody = Required<WhManagerBsTbThirdUnitGetEnterprisePageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitGetEnterprisePageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitGetEnterprisePageUsingPostBody;
}

export type WhManagerBsTbThirdUnitGetEnterprisePageUsingPostResult = Required<WhManagerBsTbThirdUnitGetEnterprisePageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitGetParkPageUsingPostOperation = paths['/whManager/bs/tbThirdUnit/getParkPage']['post'];

export type WhManagerBsTbThirdUnitGetParkPageUsingPostBody = Required<WhManagerBsTbThirdUnitGetParkPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitGetParkPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitGetParkPageUsingPostBody;
}

export type WhManagerBsTbThirdUnitGetParkPageUsingPostResult = Required<WhManagerBsTbThirdUnitGetParkPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostOperation = paths['/whManager/bs/tbThirdUnit/getSafeEduRecord']['post'];

export type WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostBody = Required<WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostBody;
}

export type WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostResult = Required<WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitLevelStatisticUsingGetOperation = paths['/whManager/bs/tbThirdUnit/levelStatistic']['get'];

export interface WhManagerBsTbThirdUnitLevelStatisticUsingGetOptions {
  [key: string]: unknown;
}

export type WhManagerBsTbThirdUnitLevelStatisticUsingGetResult = Required<WhManagerBsTbThirdUnitLevelStatisticUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitRegisterUsingPostOperation = paths['/whManager/bs/tbThirdUnit/register']['post'];

export type WhManagerBsTbThirdUnitRegisterUsingPostBody = Required<WhManagerBsTbThirdUnitRegisterUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitRegisterUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitRegisterUsingPostBody;
}

export type WhManagerBsTbThirdUnitRegisterUsingPostResult = Required<WhManagerBsTbThirdUnitRegisterUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitTypeStatisticUsingGetOperation = paths['/whManager/bs/tbThirdUnit/typeStatistic']['get'];

export interface WhManagerBsTbThirdUnitTypeStatisticUsingGetOptions {
  [key: string]: unknown;
}

export type WhManagerBsTbThirdUnitTypeStatisticUsingGetResult = Required<WhManagerBsTbThirdUnitTypeStatisticUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostOperation = paths['/whManager/bs/tbThirdUnit/uploadSafeEduRecord']['post'];

export type WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostBody = Required<WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostBody;
}

export type WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostResult = Required<WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDeptListUsingPostOperation = paths['/whManager/system/systemDept/list']['post'];

export interface WhManagerSystemSystemDeptListUsingPostOptions {
  [key: string]: unknown;
}

export type WhManagerSystemSystemDeptListUsingPostResult = Required<WhManagerSystemSystemDeptListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDeptRemoveByIdListUsingPostOperation = paths['/whManager/system/systemDept/removeByIdList']['post'];

export type WhManagerSystemSystemDeptRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemDeptRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDeptRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDeptRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemDeptRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemDeptRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDeptSaveUsingPostOperation = paths['/whManager/system/systemDept/save']['post'];

export type WhManagerSystemSystemDeptSaveUsingPostBody = Required<WhManagerSystemSystemDeptSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDeptSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDeptSaveUsingPostBody;
}

export type WhManagerSystemSystemDeptSaveUsingPostResult = Required<WhManagerSystemSystemDeptSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDeptUpdateUsingPostOperation = paths['/whManager/system/systemDept/update']['post'];

export type WhManagerSystemSystemDeptUpdateUsingPostBody = Required<WhManagerSystemSystemDeptUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDeptUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDeptUpdateUsingPostBody;
}

export type WhManagerSystemSystemDeptUpdateUsingPostResult = Required<WhManagerSystemSystemDeptUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictListUsingPostOperation = paths['/whManager/system/systemDict/list']['post'];

export interface WhManagerSystemSystemDictListUsingPostOptions {
  [key: string]: unknown;
}

export type WhManagerSystemSystemDictListUsingPostResult = Required<WhManagerSystemSystemDictListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictListPageUsingPostOperation = paths['/whManager/system/systemDict/listPage']['post'];

export type WhManagerSystemSystemDictListPageUsingPostBody = Required<WhManagerSystemSystemDictListPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictListPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictListPageUsingPostBody;
}

export type WhManagerSystemSystemDictListPageUsingPostResult = Required<WhManagerSystemSystemDictListPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictRemoveByIdListUsingPostOperation = paths['/whManager/system/systemDict/removeByIdList']['post'];

export type WhManagerSystemSystemDictRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemDictRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemDictRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemDictRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictSaveUsingPostOperation = paths['/whManager/system/systemDict/save']['post'];

export type WhManagerSystemSystemDictSaveUsingPostBody = Required<WhManagerSystemSystemDictSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictSaveUsingPostBody;
}

export type WhManagerSystemSystemDictSaveUsingPostResult = Required<WhManagerSystemSystemDictSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictUpdateUsingPostOperation = paths['/whManager/system/systemDict/update']['post'];

export type WhManagerSystemSystemDictUpdateUsingPostBody = Required<WhManagerSystemSystemDictUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictUpdateUsingPostBody;
}

export type WhManagerSystemSystemDictUpdateUsingPostResult = Required<WhManagerSystemSystemDictUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictDataListUsingPostOperation = paths['/whManager/system/systemDictData/list']['post'];

export type WhManagerSystemSystemDictDataListUsingPostBody = Required<WhManagerSystemSystemDictDataListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictDataListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictDataListUsingPostBody;
}

export type WhManagerSystemSystemDictDataListUsingPostResult = Required<WhManagerSystemSystemDictDataListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictDataRemoveByIdListUsingPostOperation = paths['/whManager/system/systemDictData/removeByIdList']['post'];

export type WhManagerSystemSystemDictDataRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemDictDataRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictDataRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictDataRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemDictDataRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemDictDataRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictDataSaveUsingPostOperation = paths['/whManager/system/systemDictData/save']['post'];

export type WhManagerSystemSystemDictDataSaveUsingPostBody = Required<WhManagerSystemSystemDictDataSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictDataSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictDataSaveUsingPostBody;
}

export type WhManagerSystemSystemDictDataSaveUsingPostResult = Required<WhManagerSystemSystemDictDataSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemDictDataUpdateUsingPostOperation = paths['/whManager/system/systemDictData/update']['post'];

export type WhManagerSystemSystemDictDataUpdateUsingPostBody = Required<WhManagerSystemSystemDictDataUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemDictDataUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemDictDataUpdateUsingPostBody;
}

export type WhManagerSystemSystemDictDataUpdateUsingPostResult = Required<WhManagerSystemSystemDictDataUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemFileDownloadIdUsingGetOperation = paths['/whManager/system/systemFile/download/{id}']['get'];

export type WhManagerSystemSystemFileDownloadIdUsingGetPath = WhManagerSystemSystemFileDownloadIdUsingGetOperation['parameters']['path']

export interface WhManagerSystemSystemFileDownloadIdUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerSystemSystemFileDownloadIdUsingGetPath;
}

export type WhManagerSystemSystemFileDownloadIdUsingGetResult = any

export type WhManagerSystemSystemFileDownloadLocalFileUsingGetOperation = paths['/whManager/system/systemFile/downloadLocalFile']['get'];

export type WhManagerSystemSystemFileDownloadLocalFileUsingGetQuery = WhManagerSystemSystemFileDownloadLocalFileUsingGetOperation['parameters']['query']

export interface WhManagerSystemSystemFileDownloadLocalFileUsingGetOptions {
  [key: string]: unknown;
  query: WhManagerSystemSystemFileDownloadLocalFileUsingGetQuery;
}

export type WhManagerSystemSystemFileDownloadLocalFileUsingGetResult = Required<WhManagerSystemSystemFileDownloadLocalFileUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemFileGetListUsingPostOperation = paths['/whManager/system/systemFile/getList']['post'];

export type WhManagerSystemSystemFileGetListUsingPostBody = Required<WhManagerSystemSystemFileGetListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemFileGetListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemFileGetListUsingPostBody;
}

export type WhManagerSystemSystemFileGetListUsingPostResult = Required<WhManagerSystemSystemFileGetListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemFileListUsingPostOperation = paths['/whManager/system/systemFile/list']['post'];

export type WhManagerSystemSystemFileListUsingPostBody = Required<WhManagerSystemSystemFileListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemFileListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemFileListUsingPostBody;
}

export type WhManagerSystemSystemFileListUsingPostResult = Required<WhManagerSystemSystemFileListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemFileListPageUsingPostOperation = paths['/whManager/system/systemFile/listPage']['post'];

export type WhManagerSystemSystemFileListPageUsingPostBody = Required<WhManagerSystemSystemFileListPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemFileListPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemFileListPageUsingPostBody;
}

export type WhManagerSystemSystemFileListPageUsingPostResult = Required<WhManagerSystemSystemFileListPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemFileRemoveByIdListUsingPostOperation = paths['/whManager/system/systemFile/removeByIdList']['post'];

export type WhManagerSystemSystemFileRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemFileRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemFileRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemFileRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemFileRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemFileRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemFileUploadUsingPostOperation = paths['/whManager/system/systemFile/upload']['post'];

export type WhManagerSystemSystemFileUploadUsingPostBody = Required<WhManagerSystemSystemFileUploadUsingPostOperation>['requestBody']['content']['multipart/form-data']

export interface WhManagerSystemSystemFileUploadUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemFileUploadUsingPostBody;
}

export type WhManagerSystemSystemFileUploadUsingPostResult = Required<WhManagerSystemSystemFileUploadUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetOperation = paths['/whManager/system/systemLog/getByThreadId/{threadId}']['get'];

export type WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetPath = WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetOperation['parameters']['path']

export interface WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetPath;
}

export type WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetResult = Required<WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemLogListPageUsingPostOperation = paths['/whManager/system/systemLog/listPage']['post'];

export type WhManagerSystemSystemLogListPageUsingPostBody = Required<WhManagerSystemSystemLogListPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemLogListPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemLogListPageUsingPostBody;
}

export type WhManagerSystemSystemLogListPageUsingPostResult = Required<WhManagerSystemSystemLogListPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemLogSaveUsingPostOperation = paths['/whManager/system/systemLog/save']['post'];

export type WhManagerSystemSystemLogSaveUsingPostBody = Required<WhManagerSystemSystemLogSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemLogSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemLogSaveUsingPostBody;
}

export type WhManagerSystemSystemLogSaveUsingPostResult = Required<WhManagerSystemSystemLogSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetOperation = paths['/whManager/system/systemLogExtend/getByLogId/{logId}']['get'];

export type WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetPath = WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetOperation['parameters']['path']

export interface WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetPath;
}

export type WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetResult = Required<WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleGetAllUsingGetOperation = paths['/whManager/system/systemModule/getAll']['get'];

export interface WhManagerSystemSystemModuleGetAllUsingGetOptions {
  [key: string]: unknown;
}

export type WhManagerSystemSystemModuleGetAllUsingGetResult = Required<WhManagerSystemSystemModuleGetAllUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleGetResourcesUsingGetOperation = paths['/whManager/system/systemModule/getResources']['get'];

export type WhManagerSystemSystemModuleGetResourcesUsingGetPath = WhManagerSystemSystemModuleGetResourcesUsingGetOperation['parameters']['path']

export interface WhManagerSystemSystemModuleGetResourcesUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerSystemSystemModuleGetResourcesUsingGetPath;
}

export type WhManagerSystemSystemModuleGetResourcesUsingGetResult = Required<WhManagerSystemSystemModuleGetResourcesUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleListPageUsingPostOperation = paths['/whManager/system/systemModule/listPage']['post'];

export type WhManagerSystemSystemModuleListPageUsingPostBody = Required<WhManagerSystemSystemModuleListPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemModuleListPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemModuleListPageUsingPostBody;
}

export type WhManagerSystemSystemModuleListPageUsingPostResult = Required<WhManagerSystemSystemModuleListPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetOperation = paths['/whManager/system/systemModule/listResourcesByModuleId/{id}']['get'];

export type WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetPath = WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetOperation['parameters']['path']

export interface WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetPath;
}

export type WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetResult = Required<WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleRemoveByIdListUsingPostOperation = paths['/whManager/system/systemModule/removeByIdList']['post'];

export type WhManagerSystemSystemModuleRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemModuleRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemModuleRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemModuleRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemModuleRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemModuleRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleSaveUsingPostOperation = paths['/whManager/system/systemModule/save']['post'];

export type WhManagerSystemSystemModuleSaveUsingPostBody = Required<WhManagerSystemSystemModuleSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemModuleSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemModuleSaveUsingPostBody;
}

export type WhManagerSystemSystemModuleSaveUsingPostResult = Required<WhManagerSystemSystemModuleSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleSettingResourcesUsingPostOperation = paths['/whManager/system/systemModule/settingResources']['post'];

export type WhManagerSystemSystemModuleSettingResourcesUsingPostBody = Required<WhManagerSystemSystemModuleSettingResourcesUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemModuleSettingResourcesUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemModuleSettingResourcesUsingPostBody;
}

export type WhManagerSystemSystemModuleSettingResourcesUsingPostResult = Required<WhManagerSystemSystemModuleSettingResourcesUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemModuleUpdateUsingPostOperation = paths['/whManager/system/systemModule/update']['post'];

export type WhManagerSystemSystemModuleUpdateUsingPostBody = Required<WhManagerSystemSystemModuleUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemModuleUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemModuleUpdateUsingPostBody;
}

export type WhManagerSystemSystemModuleUpdateUsingPostResult = Required<WhManagerSystemSystemModuleUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemResourcesListUsingPostOperation = paths['/whManager/system/systemResources/list']['post'];

export type WhManagerSystemSystemResourcesListUsingPostBody = Required<WhManagerSystemSystemResourcesListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemResourcesListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemResourcesListUsingPostBody;
}

export type WhManagerSystemSystemResourcesListUsingPostResult = Required<WhManagerSystemSystemResourcesListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemResourcesRemoveByIdListUsingPostOperation = paths['/whManager/system/systemResources/removeByIdList']['post'];

export type WhManagerSystemSystemResourcesRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemResourcesRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemResourcesRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemResourcesRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemResourcesRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemResourcesRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemResourcesSaveUsingPostOperation = paths['/whManager/system/systemResources/save']['post'];

export type WhManagerSystemSystemResourcesSaveUsingPostBody = Required<WhManagerSystemSystemResourcesSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemResourcesSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemResourcesSaveUsingPostBody;
}

export type WhManagerSystemSystemResourcesSaveUsingPostResult = Required<WhManagerSystemSystemResourcesSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemResourcesUpdateUsingPostOperation = paths['/whManager/system/systemResources/update']['post'];

export type WhManagerSystemSystemResourcesUpdateUsingPostBody = Required<WhManagerSystemSystemResourcesUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemResourcesUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemResourcesUpdateUsingPostBody;
}

export type WhManagerSystemSystemResourcesUpdateUsingPostResult = Required<WhManagerSystemSystemResourcesUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemRoleAssignResourceUsingPostOperation = paths['/whManager/system/systemRole/assignResource']['post'];

export type WhManagerSystemSystemRoleAssignResourceUsingPostBody = Required<WhManagerSystemSystemRoleAssignResourceUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemRoleAssignResourceUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemRoleAssignResourceUsingPostBody;
}

export type WhManagerSystemSystemRoleAssignResourceUsingPostResult = Required<WhManagerSystemSystemRoleAssignResourceUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemRoleListUsingPostOperation = paths['/whManager/system/systemRole/list']['post'];

export interface WhManagerSystemSystemRoleListUsingPostOptions {
  [key: string]: unknown;
}

export type WhManagerSystemSystemRoleListUsingPostResult = Required<WhManagerSystemSystemRoleListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemRoleRemoveByIdListUsingPostOperation = paths['/whManager/system/systemRole/removeByIdList']['post'];

export type WhManagerSystemSystemRoleRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemRoleRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemRoleRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemRoleRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemRoleRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemRoleRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemRoleSaveUsingPostOperation = paths['/whManager/system/systemRole/save']['post'];

export type WhManagerSystemSystemRoleSaveUsingPostBody = Required<WhManagerSystemSystemRoleSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemRoleSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemRoleSaveUsingPostBody;
}

export type WhManagerSystemSystemRoleSaveUsingPostResult = Required<WhManagerSystemSystemRoleSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemRoleUpdateUsingPostOperation = paths['/whManager/system/systemRole/update']['post'];

export type WhManagerSystemSystemRoleUpdateUsingPostBody = Required<WhManagerSystemSystemRoleUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemRoleUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemRoleUpdateUsingPostBody;
}

export type WhManagerSystemSystemRoleUpdateUsingPostResult = Required<WhManagerSystemSystemRoleUpdateUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserAssignRoleUsingPostOperation = paths['/whManager/system/systemUser/assignRole']['post'];

export type WhManagerSystemSystemUserAssignRoleUsingPostBody = Required<WhManagerSystemSystemUserAssignRoleUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemUserAssignRoleUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemUserAssignRoleUsingPostBody;
}

export type WhManagerSystemSystemUserAssignRoleUsingPostResult = Required<WhManagerSystemSystemUserAssignRoleUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserChangePasswordUsingPostOperation = paths['/whManager/system/systemUser/changePassword']['post'];

export type WhManagerSystemSystemUserChangePasswordUsingPostBody = Required<WhManagerSystemSystemUserChangePasswordUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemUserChangePasswordUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemUserChangePasswordUsingPostBody;
}

export type WhManagerSystemSystemUserChangePasswordUsingPostResult = Required<WhManagerSystemSystemUserChangePasswordUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserGetCurrUserInfoUsingGetOperation = paths['/whManager/system/systemUser/getCurrUserInfo']['get'];

export interface WhManagerSystemSystemUserGetCurrUserInfoUsingGetOptions {
  [key: string]: unknown;
}

export type WhManagerSystemSystemUserGetCurrUserInfoUsingGetResult = Required<WhManagerSystemSystemUserGetCurrUserInfoUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserListPageUsingPostOperation = paths['/whManager/system/systemUser/listPage']['post'];

export type WhManagerSystemSystemUserListPageUsingPostBody = Required<WhManagerSystemSystemUserListPageUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemUserListPageUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemUserListPageUsingPostBody;
}

export type WhManagerSystemSystemUserListPageUsingPostResult = Required<WhManagerSystemSystemUserListPageUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserRemoveByIdListUsingPostOperation = paths['/whManager/system/systemUser/removeByIdList']['post'];

export type WhManagerSystemSystemUserRemoveByIdListUsingPostBody = Required<WhManagerSystemSystemUserRemoveByIdListUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemUserRemoveByIdListUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemUserRemoveByIdListUsingPostBody;
}

export type WhManagerSystemSystemUserRemoveByIdListUsingPostResult = Required<WhManagerSystemSystemUserRemoveByIdListUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserSaveUsingPostOperation = paths['/whManager/system/systemUser/save']['post'];

export type WhManagerSystemSystemUserSaveUsingPostBody = Required<WhManagerSystemSystemUserSaveUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemUserSaveUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemUserSaveUsingPostBody;
}

export type WhManagerSystemSystemUserSaveUsingPostResult = Required<WhManagerSystemSystemUserSaveUsingPostOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetOperation = paths['/whManager/system/systemUser/setUseTokenExpireTime/{seconds}']['get'];

export type WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetPath = WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetOperation['parameters']['path']

export interface WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetOptions {
  [key: string]: unknown;
  path: WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetPath;
}

export type WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetResult = Required<WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetOperation>['responses']['200']['content']['*/*']

export type WhManagerSystemSystemUserUpdateUsingPostOperation = paths['/whManager/system/systemUser/update']['post'];

export type WhManagerSystemSystemUserUpdateUsingPostBody = Required<WhManagerSystemSystemUserUpdateUsingPostOperation>['requestBody']['content']['application/json']

export interface WhManagerSystemSystemUserUpdateUsingPostOptions {
  [key: string]: unknown;
  data: WhManagerSystemSystemUserUpdateUsingPostBody;
}

export type WhManagerSystemSystemUserUpdateUsingPostResult = Required<WhManagerSystemSystemUserUpdateUsingPostOperation>['responses']['200']['content']['*/*']

/**
 * @tag 业务模块-企业信息接口接口
 * @summary 根据ID删除企业
 * @url /whManager/bs/tbEnterprise/deleteById/{id}
 * @method post
 * @description 
 */
export function whManagerBsTbEnterpriseDeleteByIdIdUsingPost(options:WhManagerBsTbEnterpriseDeleteByIdIdUsingPostOptions):Promise<WhManagerBsTbEnterpriseDeleteByIdIdUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEnterprise/deleteById/{id}',
    method:'post',
  });
}

/**
 * @tag 业务模块-企业信息接口接口
 * @summary 根据ID查询企业详情
 * @url /whManager/bs/tbEnterprise/getById/{id}
 * @method post
 * @description 
 */
export function whManagerBsTbEnterpriseGetByIdIdUsingPost(options:WhManagerBsTbEnterpriseGetByIdIdUsingPostOptions):Promise<WhManagerBsTbEnterpriseGetByIdIdUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEnterprise/getById/{id}',
    method:'post',
  });
}

/**
 * @tag 业务模块-企业信息接口接口
 * @summary 分页查询
 * @url /whManager/bs/tbEnterprise/getPage
 * @method post
 * @description 
 */
export function whManagerBsTbEnterpriseGetPageUsingPost(options:WhManagerBsTbEnterpriseGetPageUsingPostOptions):Promise<WhManagerBsTbEnterpriseGetPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEnterprise/getPage',
    method:'post',
  });
}

/**
 * @tag 业务模块-企业信息接口接口
 * @summary 保存或更新
 * @url /whManager/bs/tbEnterprise/saveOrUpdate
 * @method post
 * @description 
 */
export function whManagerBsTbEnterpriseSaveOrUpdateUsingPost(options:WhManagerBsTbEnterpriseSaveOrUpdateUsingPostOptions):Promise<WhManagerBsTbEnterpriseSaveOrUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEnterprise/saveOrUpdate',
    method:'post',
  });
}

/**
 * @tag 业务模块-设备表接口
 * @summary 根据ID删除
 * @url /whManager/bs/tbEqp/deleteById/{id}
 * @method post
 * @description 
 */
export function whManagerBsTbEqpDeleteByIdIdUsingPost(options:WhManagerBsTbEqpDeleteByIdIdUsingPostOptions):Promise<WhManagerBsTbEqpDeleteByIdIdUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEqp/deleteById/{id}',
    method:'post',
  });
}

/**
 * @tag 业务模块-设备表接口
 * @summary 分页查询
 * @url /whManager/bs/tbEqp/getPage
 * @method post
 * @description 
 */
export function whManagerBsTbEqpGetPageUsingPost(options:WhManagerBsTbEqpGetPageUsingPostOptions):Promise<WhManagerBsTbEqpGetPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEqp/getPage',
    method:'post',
  });
}

/**
 * @tag 业务模块-设备表接口
 * @summary 保存或更新
 * @url /whManager/bs/tbEqp/saveOrUpdate
 * @method post
 * @description 
 */
export function whManagerBsTbEqpSaveOrUpdateUsingPost(options:WhManagerBsTbEqpSaveOrUpdateUsingPostOptions):Promise<WhManagerBsTbEqpSaveOrUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEqp/saveOrUpdate',
    method:'post',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 根据年度、危险等级统计
 * @url /whManager/bs/tbEvaluateReport/dangerStatistic/{year}
 * @method get
 * @description 
 */
export function whManagerBsTbEvaluateReportDangerStatisticYearUsingGet(options:WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetOptions):Promise<WhManagerBsTbEvaluateReportDangerStatisticYearUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/dangerStatistic/{year}',
    method:'get',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 根据ID删除
 * @url /whManager/bs/tbEvaluateReport/deleteById/{id}
 * @method post
 * @description 
 */
export function whManagerBsTbEvaluateReportDeleteByIdIdUsingPost(options:WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostOptions):Promise<WhManagerBsTbEvaluateReportDeleteByIdIdUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/deleteById/{id}',
    method:'post',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 根据ID查询明细
 * @url /whManager/bs/tbEvaluateReport/getById/{id}
 * @method post
 * @description 
 */
export function whManagerBsTbEvaluateReportGetByIdIdUsingPost(options:WhManagerBsTbEvaluateReportGetByIdIdUsingPostOptions):Promise<WhManagerBsTbEvaluateReportGetByIdIdUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/getById/{id}',
    method:'post',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 分页查询
 * @url /whManager/bs/tbEvaluateReport/getPage
 * @method post
 * @description 
 */
export function whManagerBsTbEvaluateReportGetPageUsingPost(options:WhManagerBsTbEvaluateReportGetPageUsingPostOptions):Promise<WhManagerBsTbEvaluateReportGetPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/getPage',
    method:'post',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 根据年度项目、企业统计
 * @url /whManager/bs/tbEvaluateReport/projectStatistic/{year}
 * @method get
 * @description 
 */
export function whManagerBsTbEvaluateReportProjectStatisticYearUsingGet(options:WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetOptions):Promise<WhManagerBsTbEvaluateReportProjectStatisticYearUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/projectStatistic/{year}',
    method:'get',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 根据年度、报告类型统计
 * @url /whManager/bs/tbEvaluateReport/reportTypeStatistic/{year}
 * @method get
 * @description 
 */
export function whManagerBsTbEvaluateReportReportTypeStatisticYearUsingGet(options:WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetOptions):Promise<WhManagerBsTbEvaluateReportReportTypeStatisticYearUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/reportTypeStatistic/{year}',
    method:'get',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 新增或修改评审意见
 * @url /whManager/bs/tbEvaluateReport/reviewComments
 * @method post
 * @description 
 */
export function whManagerBsTbEvaluateReportReviewCommentsUsingPost(options:WhManagerBsTbEvaluateReportReviewCommentsUsingPostOptions):Promise<WhManagerBsTbEvaluateReportReviewCommentsUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/reviewComments',
    method:'post',
  });
}

/**
 * @tag 业务模块-评价评估报告表接口
 * @summary 保存或更新
 * @url /whManager/bs/tbEvaluateReport/saveOrUpdate
 * @method post
 * @description 
 */
export function whManagerBsTbEvaluateReportSaveOrUpdateUsingPost(options:WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostOptions):Promise<WhManagerBsTbEvaluateReportSaveOrUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbEvaluateReport/saveOrUpdate',
    method:'post',
  });
}

/**
 * @tag 业务模块-安全与环境管理信息表接口
 * @summary 根据ID删除
 * @url /whManager/bs/tbSafeEnviroManager/deleteById/{id}
 * @method post
 * @description 
 */
export function whManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPost(options:WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostOptions):Promise<WhManagerBsTbSafeEnviroManagerDeleteByIdIdUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbSafeEnviroManager/deleteById/{id}',
    method:'post',
  });
}

/**
 * @tag 业务模块-安全与环境管理信息表接口
 * @summary 分页查询
 * @url /whManager/bs/tbSafeEnviroManager/getPage
 * @method post
 * @description 
 */
export function whManagerBsTbSafeEnviroManagerGetPageUsingPost(options:WhManagerBsTbSafeEnviroManagerGetPageUsingPostOptions):Promise<WhManagerBsTbSafeEnviroManagerGetPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbSafeEnviroManager/getPage',
    method:'post',
  });
}

/**
 * @tag 业务模块-安全与环境管理信息表接口
 * @summary 保存或更新
 * @url /whManager/bs/tbSafeEnviroManager/saveOrUpdate
 * @method post
 * @description 
 */
export function whManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPost(options:WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostOptions):Promise<WhManagerBsTbSafeEnviroManagerSaveOrUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbSafeEnviroManager/saveOrUpdate',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 园区端-审核
 * @url /whManager/bs/tbThirdUnit/audit
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitAuditUsingPost(options:WhManagerBsTbThirdUnitAuditUsingPostOptions):Promise<WhManagerBsTbThirdUnitAuditUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/audit',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 园区端-邮件提醒
 * @url /whManager/bs/tbThirdUnit/emailRemind
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitEmailRemindUsingPost(options:WhManagerBsTbThirdUnitEmailRemindUsingPostOptions):Promise<WhManagerBsTbThirdUnitEmailRemindUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/emailRemind',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 移动端-分页查询(档案库)
 * @url /whManager/bs/tbThirdUnit/getAppPage
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitGetAppPageUsingPost(options:WhManagerBsTbThirdUnitGetAppPageUsingPostOptions):Promise<WhManagerBsTbThirdUnitGetAppPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/getAppPage',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 园区端-档案库数量
 * @url /whManager/bs/tbThirdUnit/getArchiveCount
 * @method get
 * @description 
 */
export function whManagerBsTbThirdUnitGetArchiveCountUsingGet(options:WhManagerBsTbThirdUnitGetArchiveCountUsingGetOptions):Promise<WhManagerBsTbThirdUnitGetArchiveCountUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/getArchiveCount',
    method:'get',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 企业端-分页查询
 * @url /whManager/bs/tbThirdUnit/getEnterprisePage
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitGetEnterprisePageUsingPost(options:WhManagerBsTbThirdUnitGetEnterprisePageUsingPostOptions):Promise<WhManagerBsTbThirdUnitGetEnterprisePageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/getEnterprisePage',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 园区端-分页查询
 * @url /whManager/bs/tbThirdUnit/getParkPage
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitGetParkPageUsingPost(options:WhManagerBsTbThirdUnitGetParkPageUsingPostOptions):Promise<WhManagerBsTbThirdUnitGetParkPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/getParkPage',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 企业端-安全教育记录查询
 * @url /whManager/bs/tbThirdUnit/getSafeEduRecord
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitGetSafeEduRecordUsingPost(options:WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostOptions):Promise<WhManagerBsTbThirdUnitGetSafeEduRecordUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/getSafeEduRecord',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 园区端-单位等级统计
 * @url /whManager/bs/tbThirdUnit/levelStatistic
 * @method get
 * @description 
 */
export function whManagerBsTbThirdUnitLevelStatisticUsingGet(options:WhManagerBsTbThirdUnitLevelStatisticUsingGetOptions):Promise<WhManagerBsTbThirdUnitLevelStatisticUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/levelStatistic',
    method:'get',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 移动端-单位注册
 * @url /whManager/bs/tbThirdUnit/register
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitRegisterUsingPost(options:WhManagerBsTbThirdUnitRegisterUsingPostOptions):Promise<WhManagerBsTbThirdUnitRegisterUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/register',
    method:'post',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 园区端-单位类别统计
 * @url /whManager/bs/tbThirdUnit/typeStatistic
 * @method get
 * @description 
 */
export function whManagerBsTbThirdUnitTypeStatisticUsingGet(options:WhManagerBsTbThirdUnitTypeStatisticUsingGetOptions):Promise<WhManagerBsTbThirdUnitTypeStatisticUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/typeStatistic',
    method:'get',
  });
}

/**
 * @tag 业务模块-第三方单位接口
 * @summary 企业端-上传安全教育记录
 * @url /whManager/bs/tbThirdUnit/uploadSafeEduRecord
 * @method post
 * @description 
 */
export function whManagerBsTbThirdUnitUploadSafeEduRecordUsingPost(options:WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostOptions):Promise<WhManagerBsTbThirdUnitUploadSafeEduRecordUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/bs/tbThirdUnit/uploadSafeEduRecord',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-机构信息相关接口
 * @summary 查询所有机构数据
 * @url /whManager/system/systemDept/list
 * @method post
 * @description 查询所有机构数据
 */
export function whManagerSystemSystemDeptListUsingPost(options:WhManagerSystemSystemDeptListUsingPostOptions):Promise<WhManagerSystemSystemDeptListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDept/list',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-机构信息相关接口
 * @summary 批量删除机构数据
 * @url /whManager/system/systemDept/removeByIdList
 * @method post
 * @description 批量删除机构数据
 */
export function whManagerSystemSystemDeptRemoveByIdListUsingPost(options:WhManagerSystemSystemDeptRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemDeptRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDept/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-机构信息相关接口
 * @summary 保存机构信息
 * @url /whManager/system/systemDept/save
 * @method post
 * @description 保存机构信息
 */
export function whManagerSystemSystemDeptSaveUsingPost(options:WhManagerSystemSystemDeptSaveUsingPostOptions):Promise<WhManagerSystemSystemDeptSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDept/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-机构信息相关接口
 * @summary 修改机构信息
 * @url /whManager/system/systemDept/update
 * @method post
 * @description 修改资源信息
 */
export function whManagerSystemSystemDeptUpdateUsingPost(options:WhManagerSystemSystemDeptUpdateUsingPostOptions):Promise<WhManagerSystemSystemDeptUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDept/update',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典信息相关接口
 * @summary 查询所有字典数据
 * @url /whManager/system/systemDict/list
 * @method post
 * @description 查询所有字典数据
 */
export function whManagerSystemSystemDictListUsingPost(options:WhManagerSystemSystemDictListUsingPostOptions):Promise<WhManagerSystemSystemDictListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDict/list',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典信息相关接口
 * @summary 查询字典分页数据
 * @url /whManager/system/systemDict/listPage
 * @method post
 * @description 查询字典分页数据
 */
export function whManagerSystemSystemDictListPageUsingPost(options:WhManagerSystemSystemDictListPageUsingPostOptions):Promise<WhManagerSystemSystemDictListPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDict/listPage',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典信息相关接口
 * @summary 批量删除字典数据
 * @url /whManager/system/systemDict/removeByIdList
 * @method post
 * @description 批量删除字典数据
 */
export function whManagerSystemSystemDictRemoveByIdListUsingPost(options:WhManagerSystemSystemDictRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemDictRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDict/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典信息相关接口
 * @summary 保存字典信息
 * @url /whManager/system/systemDict/save
 * @method post
 * @description 保存字典信息
 */
export function whManagerSystemSystemDictSaveUsingPost(options:WhManagerSystemSystemDictSaveUsingPostOptions):Promise<WhManagerSystemSystemDictSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDict/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典信息相关接口
 * @summary 修改字典信息
 * @url /whManager/system/systemDict/update
 * @method post
 * @description 修改字典信息
 */
export function whManagerSystemSystemDictUpdateUsingPost(options:WhManagerSystemSystemDictUpdateUsingPostOptions):Promise<WhManagerSystemSystemDictUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDict/update',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典数据相关接口
 * @summary 查询所有字典数据
 * @url /whManager/system/systemDictData/list
 * @method post
 * @description 查询所有字典数据
 */
export function whManagerSystemSystemDictDataListUsingPost(options:WhManagerSystemSystemDictDataListUsingPostOptions):Promise<WhManagerSystemSystemDictDataListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDictData/list',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典数据相关接口
 * @summary 批量删除字典数据
 * @url /whManager/system/systemDictData/removeByIdList
 * @method post
 * @description 批量删除字典数据
 */
export function whManagerSystemSystemDictDataRemoveByIdListUsingPost(options:WhManagerSystemSystemDictDataRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemDictDataRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDictData/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典数据相关接口
 * @summary 保存字典数据信息
 * @url /whManager/system/systemDictData/save
 * @method post
 * @description 保存字典数据信息
 */
export function whManagerSystemSystemDictDataSaveUsingPost(options:WhManagerSystemSystemDictDataSaveUsingPostOptions):Promise<WhManagerSystemSystemDictDataSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDictData/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-字典数据相关接口
 * @summary 修改字典数据信息
 * @url /whManager/system/systemDictData/update
 * @method post
 * @description 修改字典数据信息
 */
export function whManagerSystemSystemDictDataUpdateUsingPost(options:WhManagerSystemSystemDictDataUpdateUsingPostOptions):Promise<WhManagerSystemSystemDictDataUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemDictData/update',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 查询附件下载
 * @url /whManager/system/systemFile/download/{id}
 * @method get
 * @description 查询附件下载
 */
export function whManagerSystemSystemFileDownloadIdUsingGet(options:WhManagerSystemSystemFileDownloadIdUsingGetOptions):Promise<WhManagerSystemSystemFileDownloadIdUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/download/{id}',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 下载项目本地模板附件
 * @url /whManager/system/systemFile/downloadLocalFile
 * @method get
 * @description 通过文件名称下载项目本地模板附件
 */
export function whManagerSystemSystemFileDownloadLocalFileUsingGet(options:WhManagerSystemSystemFileDownloadLocalFileUsingGetOptions):Promise<WhManagerSystemSystemFileDownloadLocalFileUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/downloadLocalFile',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 查询所有附件数据
 * @url /whManager/system/systemFile/getList
 * @method post
 * @description 查询所有附件数据
 */
export function whManagerSystemSystemFileGetListUsingPost(options:WhManagerSystemSystemFileGetListUsingPostOptions):Promise<WhManagerSystemSystemFileGetListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/getList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 查询附件列表
 * @url /whManager/system/systemFile/list
 * @method post
 * @description 查询附件列表
 */
export function whManagerSystemSystemFileListUsingPost(options:WhManagerSystemSystemFileListUsingPostOptions):Promise<WhManagerSystemSystemFileListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/list',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 查询附件分页数据
 * @url /whManager/system/systemFile/listPage
 * @method post
 * @description 查询附件分页数据
 */
export function whManagerSystemSystemFileListPageUsingPost(options:WhManagerSystemSystemFileListPageUsingPostOptions):Promise<WhManagerSystemSystemFileListPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/listPage',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 批量删除附件数据
 * @url /whManager/system/systemFile/removeByIdList
 * @method post
 * @description 批量删除附件数据
 */
export function whManagerSystemSystemFileRemoveByIdListUsingPost(options:WhManagerSystemSystemFileRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemFileRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-附件信息相关接口
 * @summary 附件上传
 * @url /whManager/system/systemFile/upload
 * @method post
 * @description 附件上传
 */
export function whManagerSystemSystemFileUploadUsingPost(options:WhManagerSystemSystemFileUploadUsingPostOptions):Promise<WhManagerSystemSystemFileUploadUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemFile/upload',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-日志表相关接口
 * @summary 通过线程ID查询
 * @url /whManager/system/systemLog/getByThreadId/{threadId}
 * @method get
 * @description 通过线程ID查询
 */
export function whManagerSystemSystemLogGetByThreadIdThreadIdUsingGet(options:WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetOptions):Promise<WhManagerSystemSystemLogGetByThreadIdThreadIdUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemLog/getByThreadId/{threadId}',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-日志表相关接口
 * @summary 分页查询信息
 * @url /whManager/system/systemLog/listPage
 * @method post
 * @description 分页查询信息
 */
export function whManagerSystemSystemLogListPageUsingPost(options:WhManagerSystemSystemLogListPageUsingPostOptions):Promise<WhManagerSystemSystemLogListPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemLog/listPage',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-日志表相关接口
 * @summary 保存日志信息
 * @url /whManager/system/systemLog/save
 * @method post
 * @description 保存日志信息
 */
export function whManagerSystemSystemLogSaveUsingPost(options:WhManagerSystemSystemLogSaveUsingPostOptions):Promise<WhManagerSystemSystemLogSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemLog/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-日志表相关接口
 * @summary 根据日志ID查询信息
 * @url /whManager/system/systemLogExtend/getByLogId/{logId}
 * @method get
 * @description 根据日志ID查询信息
 */
export function whManagerSystemSystemLogExtendGetByLogIdLogIdUsingGet(options:WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetOptions):Promise<WhManagerSystemSystemLogExtendGetByLogIdLogIdUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemLogExtend/getByLogId/{logId}',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 获取全部模块
 * @url /whManager/system/systemModule/getAll
 * @method get
 * @description 获取全部模块
 */
export function whManagerSystemSystemModuleGetAllUsingGet(options:WhManagerSystemSystemModuleGetAllUsingGetOptions):Promise<WhManagerSystemSystemModuleGetAllUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/getAll',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 根据模块id获取资源
 * @url /whManager/system/systemModule/getResources
 * @method get
 * @description 根据模块id获取资源
 */
export function whManagerSystemSystemModuleGetResourcesUsingGet(options:WhManagerSystemSystemModuleGetResourcesUsingGetOptions):Promise<WhManagerSystemSystemModuleGetResourcesUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/getResources',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 分页查询
 * @url /whManager/system/systemModule/listPage
 * @method post
 * @description 分页查询
 */
export function whManagerSystemSystemModuleListPageUsingPost(options:WhManagerSystemSystemModuleListPageUsingPostOptions):Promise<WhManagerSystemSystemModuleListPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/listPage',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 设置目录
 * @url /whManager/system/systemModule/listResourcesByModuleId/{id}
 * @method get
 * @description 设置目录
 */
export function whManagerSystemSystemModuleListResourcesByModuleIdIdUsingGet(options:WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetOptions):Promise<WhManagerSystemSystemModuleListResourcesByModuleIdIdUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/listResourcesByModuleId/{id}',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 删除
 * @url /whManager/system/systemModule/removeByIdList
 * @method post
 * @description 删除
 */
export function whManagerSystemSystemModuleRemoveByIdListUsingPost(options:WhManagerSystemSystemModuleRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemModuleRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 保存资源信息
 * @url /whManager/system/systemModule/save
 * @method post
 * @description 保存资源信息
 */
export function whManagerSystemSystemModuleSaveUsingPost(options:WhManagerSystemSystemModuleSaveUsingPostOptions):Promise<WhManagerSystemSystemModuleSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 设置目录
 * @url /whManager/system/systemModule/settingResources
 * @method post
 * @description 设置目录
 */
export function whManagerSystemSystemModuleSettingResourcesUsingPost(options:WhManagerSystemSystemModuleSettingResourcesUsingPostOptions):Promise<WhManagerSystemSystemModuleSettingResourcesUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/settingResources',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-模块管理
 * @summary 修改资源信息
 * @url /whManager/system/systemModule/update
 * @method post
 * @description 修改资源信息
 */
export function whManagerSystemSystemModuleUpdateUsingPost(options:WhManagerSystemSystemModuleUpdateUsingPostOptions):Promise<WhManagerSystemSystemModuleUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemModule/update',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-系统资源相关接口
 * @summary 查询所有资源数据
 * @url /whManager/system/systemResources/list
 * @method post
 * @description 查询所有资源数据
 */
export function whManagerSystemSystemResourcesListUsingPost(options:WhManagerSystemSystemResourcesListUsingPostOptions):Promise<WhManagerSystemSystemResourcesListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemResources/list',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-系统资源相关接口
 * @summary 批量删除资源数据
 * @url /whManager/system/systemResources/removeByIdList
 * @method post
 * @description 批量删除资源数据
 */
export function whManagerSystemSystemResourcesRemoveByIdListUsingPost(options:WhManagerSystemSystemResourcesRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemResourcesRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemResources/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-系统资源相关接口
 * @summary 保存资源信息
 * @url /whManager/system/systemResources/save
 * @method post
 * @description 保存资源信息
 */
export function whManagerSystemSystemResourcesSaveUsingPost(options:WhManagerSystemSystemResourcesSaveUsingPostOptions):Promise<WhManagerSystemSystemResourcesSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemResources/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-系统资源相关接口
 * @summary 修改资源信息
 * @url /whManager/system/systemResources/update
 * @method post
 * @description 修改资源信息
 */
export function whManagerSystemSystemResourcesUpdateUsingPost(options:WhManagerSystemSystemResourcesUpdateUsingPostOptions):Promise<WhManagerSystemSystemResourcesUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemResources/update',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-角色相关接口
 * @summary 设置资源
 * @url /whManager/system/systemRole/assignResource
 * @method post
 * @description 设置资源
 */
export function whManagerSystemSystemRoleAssignResourceUsingPost(options:WhManagerSystemSystemRoleAssignResourceUsingPostOptions):Promise<WhManagerSystemSystemRoleAssignResourceUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemRole/assignResource',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-角色相关接口
 * @summary 查询所有角色数据
 * @url /whManager/system/systemRole/list
 * @method post
 * @description 查询所有角色数据
 */
export function whManagerSystemSystemRoleListUsingPost(options:WhManagerSystemSystemRoleListUsingPostOptions):Promise<WhManagerSystemSystemRoleListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemRole/list',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-角色相关接口
 * @summary 批量删除数据
 * @url /whManager/system/systemRole/removeByIdList
 * @method post
 * @description 批量删除数据
 */
export function whManagerSystemSystemRoleRemoveByIdListUsingPost(options:WhManagerSystemSystemRoleRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemRoleRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemRole/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-角色相关接口
 * @summary 保存角色信息
 * @url /whManager/system/systemRole/save
 * @method post
 * @description 保存角色信息
 */
export function whManagerSystemSystemRoleSaveUsingPost(options:WhManagerSystemSystemRoleSaveUsingPostOptions):Promise<WhManagerSystemSystemRoleSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemRole/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-角色相关接口
 * @summary 修改角色信息
 * @url /whManager/system/systemRole/update
 * @method post
 * @description 修改角色信息
 */
export function whManagerSystemSystemRoleUpdateUsingPost(options:WhManagerSystemSystemRoleUpdateUsingPostOptions):Promise<WhManagerSystemSystemRoleUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemRole/update',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 分配角色
 * @url /whManager/system/systemUser/assignRole
 * @method post
 * @description 分配角色
 */
export function whManagerSystemSystemUserAssignRoleUsingPost(options:WhManagerSystemSystemUserAssignRoleUsingPostOptions):Promise<WhManagerSystemSystemUserAssignRoleUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/assignRole',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 修改当前用户密码
 * @url /whManager/system/systemUser/changePassword
 * @method post
 * @description 修改当亲用户密码
 */
export function whManagerSystemSystemUserChangePasswordUsingPost(options:WhManagerSystemSystemUserChangePasswordUsingPostOptions):Promise<WhManagerSystemSystemUserChangePasswordUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/changePassword',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 获取当前登录用户信息
 * @url /whManager/system/systemUser/getCurrUserInfo
 * @method get
 * @description 获取当前登录用户信息
 */
export function whManagerSystemSystemUserGetCurrUserInfoUsingGet(options:WhManagerSystemSystemUserGetCurrUserInfoUsingGetOptions):Promise<WhManagerSystemSystemUserGetCurrUserInfoUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/getCurrUserInfo',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 分页查询用户信息
 * @url /whManager/system/systemUser/listPage
 * @method post
 * @description 分页查询用户信息
 */
export function whManagerSystemSystemUserListPageUsingPost(options:WhManagerSystemSystemUserListPageUsingPostOptions):Promise<WhManagerSystemSystemUserListPageUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/listPage',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 批量删除数据
 * @url /whManager/system/systemUser/removeByIdList
 * @method post
 * @description 批量删除数据
 */
export function whManagerSystemSystemUserRemoveByIdListUsingPost(options:WhManagerSystemSystemUserRemoveByIdListUsingPostOptions):Promise<WhManagerSystemSystemUserRemoveByIdListUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/removeByIdList',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 保存用户信息
 * @url /whManager/system/systemUser/save
 * @method post
 * @description 保存用户信息
 */
export function whManagerSystemSystemUserSaveUsingPost(options:WhManagerSystemSystemUserSaveUsingPostOptions):Promise<WhManagerSystemSystemUserSaveUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/save',
    method:'post',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 设置用户超时时间
 * @url /whManager/system/systemUser/setUseTokenExpireTime/{seconds}
 * @method get
 * @description 设置用户超时时间
 */
export function whManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGet(options:WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetOptions):Promise<WhManagerSystemSystemUserSetUseTokenExpireTimeSecondsUsingGetResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/setUseTokenExpireTime/{seconds}',
    method:'get',
  });
}

/**
 * @tag 系统管理模块-用户信息相关接口
 * @summary 修改用户信息
 * @url /whManager/system/systemUser/update
 * @method post
 * @description 修改用户信息
 */
export function whManagerSystemSystemUserUpdateUsingPost(options:WhManagerSystemSystemUserUpdateUsingPostOptions):Promise<WhManagerSystemSystemUserUpdateUsingPostResult> {
  return request({
    ...options,
    url:'/whManager/system/systemUser/update',
    method:'post',
  });
}